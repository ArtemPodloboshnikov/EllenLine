{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zimin\\\\Desktop\\\\college\\\\Homework\\\\\\u0421\\u0430\\u0439\\u0442\\u044B\\\\React_Apps\\\\Ellinline\\\\client\\\\src\\\\components\\\\CustomElements\\\\DynamicList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './DynamicList.module.css';\n\nconst CreateInput = params => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrap,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: params.id,\n      onClick: params.minusOnClick,\n      className: classes.controls,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: params.name + params.id,\n      ref: params.register,\n      id: params.id,\n      className: classes.input + ' ' + params.classInput,\n      value: params.value[params.id],\n      placeholder: params.placeholder,\n      onChange: params.onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: params.plusOnClick,\n      className: classes.controls,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CreateInput;\n\nconst DynamicList = props => {\n  _s();\n\n  const [value, setValue] = useState([props.value]);\n\n  const printValue = e => {\n    let new_value = [...value];\n    new_value[Number.parseInt(e.target.id)] = e.target.value;\n    setValue(new_value);\n  };\n\n  const [countMemberArray, setCountMemberArray] = useState(1);\n  const inputs = [];\n\n  for (let i = 0; i < countMemberArray; i++) {\n    inputs.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CreateInput, {\n        register: props.register,\n        name: props.name,\n        classInput: props.classInput,\n        id: i,\n        value: value,\n        onChange: printValue,\n        placeholder: props.placeholder,\n        plusOnClick: () => {\n          setCountMemberArray(countMemberArray + 1);\n          setValue([...value, '']);\n        },\n        minusOnClick: e => {\n          if (countMemberArray == 1) {\n            return;\n          } else {\n            setCountMemberArray(countMemberArray - 1);\n            let new_array = [...value]; //console.log(e.target.id);\n\n            new_array.splice(e.target.id, 1);\n            let name = document.getElementsByName(props.name + e.target.id);\n            name.value = '';\n            setValue(new_array);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false));\n  } //console.log(value)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.inputs + ' ' + props.className,\n    children: inputs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DynamicList, \"FCRzv4uIwJYBDfkijwnZWx5dYH4=\");\n\n_c2 = DynamicList;\nexport default DynamicList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateInput\");\n$RefreshReg$(_c2, \"DynamicList\");","map":{"version":3,"sources":["C:/Users/zimin/Desktop/college/Homework/Сайты/React_Apps/Ellinline/client/src/components/CustomElements/DynamicList.jsx"],"names":["React","useState","classes","CreateInput","params","wrap","id","minusOnClick","controls","name","register","input","classInput","value","placeholder","onChange","plusOnClick","DynamicList","props","setValue","printValue","e","new_value","Number","parseInt","target","countMemberArray","setCountMemberArray","inputs","i","push","new_array","splice","document","getElementsByName","className"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport classes from './DynamicList.module.css'\r\n\r\nconst CreateInput = (params)=>{\r\n\r\n    return (\r\n        <div className={classes.wrap}>\r\n            <div id={params.id} onClick={params.minusOnClick} className={classes.controls}>-</div>\r\n            <input name={params.name + params.id}  ref={params.register} id={params.id} \r\n            className={classes.input + ' ' + params.classInput} value={params.value[params.id]} \r\n            placeholder={params.placeholder} onChange={params.onChange}/>\r\n            <div onClick={params.plusOnClick} className={classes.controls}>+</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DynamicList = (props) => {\r\n   \r\n    const [value, setValue] = useState([props.value]);\r\n    const printValue = (e) => {\r\n\r\n        let new_value = [...value];\r\n        new_value[Number.parseInt(e.target.id)] =  e.target.value;\r\n        setValue(new_value);\r\n    }\r\n\r\n    const [countMemberArray, setCountMemberArray] = useState(1);\r\n    const inputs = [];\r\n\r\n    for(let i = 0; i < countMemberArray; i++){\r\n\r\n        inputs.push(\r\n            <>\r\n                <CreateInput register={props.register} name={props.name} \r\n                classInput={props.classInput} id={i} value={value} onChange={printValue} \r\n                placeholder={props.placeholder} plusOnClick={()=>{\r\n                    \r\n                    setCountMemberArray(countMemberArray + 1);\r\n                    setValue([...value, ''])\r\n                }}\r\n                minusOnClick={(e)=>{\r\n                    if (countMemberArray==1)\r\n                    {\r\n                        return;\r\n                    }\r\n                    else \r\n                    {\r\n\r\n                        setCountMemberArray(countMemberArray - 1);\r\n                        let new_array = [...value];\r\n                        //console.log(e.target.id);\r\n                        new_array.splice(e.target.id, 1);\r\n                        let name = document.getElementsByName(props.name + e.target.id);\r\n                        name.value = '';\r\n                        setValue(new_array);\r\n                    }\r\n                }}\r\n                />\r\n            </>\r\n        )\r\n\r\n    }\r\n    \r\n    //console.log(value)\r\n    return (\r\n        <div className={classes.inputs + ' ' + props.className}>\r\n            {inputs}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DynamicList;\r\n"]},"metadata":{},"sourceType":"module"}