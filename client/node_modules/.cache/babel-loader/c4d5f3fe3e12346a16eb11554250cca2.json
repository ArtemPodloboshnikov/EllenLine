{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zimin\\\\Desktop\\\\college\\\\Homework\\\\\\u0421\\u0430\\u0439\\u0442\\u044B\\\\React_Apps\\\\Ellinline\\\\client\\\\src\\\\components\\\\CustomElements\\\\FilesUploader.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './FilesUploader.module.css';\n\nconst FilesUploader = props => {\n  _s();\n\n  const [drag, setDrag] = useState(false);\n  const [countFiles, setCountFiles] = useState(0);\n\n  function FileListItems(files) {\n    let b = new ClipboardEvent(\"\").clipboardData || new DataTransfer();\n\n    for (let i = 0, len = files.length; i < len; i++) b.items.add(files[i]);\n\n    return b.files;\n  }\n\n  const onDragStart = e => {\n    e.preventDefault();\n    setDrag(true);\n  };\n\n  const onDragLeave = e => {\n    e.preventDefault();\n    setDrag(false);\n  };\n\n  const onDrop = e => {\n    e.preventDefault();\n    let files = [...e.dataTransfer.files];\n    console.log(files);\n    document.getElementsByName(props.name)[0].files = new FileListItems(files);\n    setDrag(false);\n    setCountFiles(files.length);\n  };\n\n  const changeInputFile = () => {\n    const files = document.getElementsByName(props.name);\n    setCountFiles(files[0].files.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrap + ' ' + props.className,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: changeInputFile,\n      ref: props.register,\n      name: props.name,\n      id: classes.file,\n      type: \"file\",\n      multiple: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), props.placeholder ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.placeholder + ' ' + props.classPlaceholder,\n      children: props.placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }, this) : '', drag ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.drag + ' ' + props.classInput,\n      onDragStart: onDragStart,\n      onDragLeave: onDragLeave,\n      onDragOver: onDragStart,\n      onDrop: onDrop,\n      children: \"\\u041E\\u0442\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\\u044B, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u0445\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n      for: classes.file,\n      className: classes.drop + ' ' + props.classInput,\n      onDragStart: onDragStart,\n      onDragLeave: onDragLeave,\n      onDragOver: onDragStart,\n      children: countFiles ? countFiles + ' файла' : 'Перетащите файлы, чтобы загрузить их'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FilesUploader, \"0tPr//1rqg7/SKvog/6rkuPxASU=\");\n\n_c = FilesUploader;\nexport default FilesUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilesUploader\");","map":{"version":3,"sources":["C:/Users/zimin/Desktop/college/Homework/Сайты/React_Apps/Ellinline/client/src/components/CustomElements/FilesUploader.jsx"],"names":["React","useState","classes","FilesUploader","props","drag","setDrag","countFiles","setCountFiles","FileListItems","files","b","ClipboardEvent","clipboardData","DataTransfer","i","len","length","items","add","onDragStart","e","preventDefault","onDragLeave","onDrop","dataTransfer","console","log","document","getElementsByName","name","changeInputFile","wrap","className","register","file","placeholder","classPlaceholder","classInput","drop"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport classes from './FilesUploader.module.css';\r\n\r\nconst FilesUploader = (props) => {\r\n\r\n    const [drag, setDrag] = useState(false);\r\n    const [countFiles, setCountFiles] = useState(0);\r\n    function FileListItems(files){\r\n        let b = new ClipboardEvent(\"\").clipboardData || new DataTransfer()\r\n        for (let i = 0, len = files.length; i<len; i++) b.items.add(files[i])\r\n        return b.files\r\n    }\r\n    const onDragStart = (e) =>{\r\n\r\n        e.preventDefault()\r\n        setDrag(true);\r\n\r\n    }\r\n    const onDragLeave = (e) =>{\r\n\r\n        e.preventDefault()\r\n        setDrag(false);\r\n\r\n    }\r\n    const onDrop = (e) =>{\r\n\r\n        e.preventDefault()\r\n        let files = [...e.dataTransfer.files];\r\n        console.log(files);\r\n        document.getElementsByName(props.name)[0].files = new FileListItems(files);\r\n        setDrag(false);\r\n        setCountFiles(files.length);\r\n    }\r\n    const changeInputFile = () => {\r\n\r\n        const files = document.getElementsByName(props.name);\r\n        setCountFiles(files[0].files.length);\r\n    }\r\n    return (\r\n        <div className={classes.wrap + ' ' + props.className}>\r\n            <input onChange={changeInputFile} ref={props.register} name={props.name} id={classes.file} type='file' multiple={true}/>\r\n            {props.placeholder? <div className={classes.placeholder + ' ' + props.classPlaceholder}>{props.placeholder}</div> : ''}\r\n            {\r\n                drag? \r\n                <div className={classes.drag + ' ' + props.classInput}\r\n                     onDragStart={onDragStart}\r\n                     onDragLeave={onDragLeave}\r\n                     onDragOver={onDragStart}\r\n                     onDrop={onDrop}\r\n                >Отпустите файлы, чтобы загрузить их</div>\r\n                :\r\n                <label for={classes.file} className={classes.drop + ' ' + props.classInput}\r\n                     onDragStart={onDragStart}\r\n                     onDragLeave={onDragLeave}\r\n                     onDragOver={onDragStart}\r\n                >{countFiles? countFiles + ' файла': 'Перетащите файлы, чтобы загрузить их'}</label>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilesUploader\r\n"]},"metadata":{},"sourceType":"module"}