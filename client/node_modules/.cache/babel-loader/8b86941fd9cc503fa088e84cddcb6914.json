{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\zimin\\\\Desktop\\\\college\\\\Homework\\\\\\u0421\\u0430\\u0439\\u0442\\u044B\\\\React_Apps\\\\Ellinline\\\\client\\\\src\\\\components\\\\Common\\\\Map\\\\YandexMap.jsx\";\nimport { YMaps, Map, Placemark, Clusterer, GeoObject } from 'react-yandex-maps';\nimport React from 'react';\nimport classes from './YandexMap.module.css'; //const mapState = { center: [59.9073, 30.3276], zoom: 10 };\n//const markState = {points: [{geometry: [59.87026977960634, 30.26204491830366], hintContent: 'Эллинлайн', balloonContent: 'ул. Зайцева, 3, корп. 2, Санкт-Петербург'}]}\n\nfunction YandexMap(props) {\n  //debugger;\n  console.log(props.points);\n  let mapState = {};\n\n  if (Object.keys(props.points).length == 1) {\n    mapState = {\n      center: props.points[0].coordinates,\n      zoom: 17\n    };\n  } else {\n    if (props.cityCoordinates.length == 0) {\n      mapState = {\n        center: props.points[0].coordinates,\n        zoom: 10\n      };\n    } else {\n      mapState = {\n        center: props.cityCoordinates,\n        zoom: 10\n      };\n    }\n  } //console.log(props.points[0].hintContent);\n\n\n  const markState = {\n    points: props.points,\n    modules: ['geoObject.addon.balloon', 'geoObject.addon.hint']\n  };\n  return /*#__PURE__*/_jsxDEV(YMaps, {\n    enterprise: true,\n    query: {\n      apikey: '5594e597-90cb-48f6-a139-b76c8a42a41a&lang=ru_RU'\n    },\n    version: \"2.1\",\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      state: mapState,\n      children: /*#__PURE__*/_jsxDEV(Clusterer, {\n        options: {\n          preset: 'islands#invertedVioletClusterIcons',\n          clusterDisableClickZoom: true,\n          clusterHideIconOnBalloonOpen: false,\n          geoObjectHideIconOnBalloonOpen: false\n        },\n        children: markState.points.map(point => /*#__PURE__*/_jsxDEV(GeoObject, {\n          geometry: {\n            type: \"Point\",\n            coordinates: point.coordinates\n          },\n          properties: {\n            hintContent: point.hintContent,\n            balloonContentBody: point.balloonContentBody\n          },\n          modules: [...markState.modules],\n          options: {\n            iconLayout: 'default#image',\n            iconImageHref: 'images/marker.svg',\n            iconImageSize: [60, 52],\n            iconImageOffset: [-30, -56]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 16\n  }, this);\n}\n\n_c = YandexMap;\n;\nexport default YandexMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"YandexMap\");","map":{"version":3,"sources":["C:/Users/zimin/Desktop/college/Homework/Сайты/React_Apps/Ellinline/client/src/components/Common/Map/YandexMap.jsx"],"names":["YMaps","Map","Placemark","Clusterer","GeoObject","React","classes","YandexMap","props","console","log","points","mapState","Object","keys","length","center","coordinates","zoom","cityCoordinates","markState","modules","apikey","preset","clusterDisableClickZoom","clusterHideIconOnBalloonOpen","geoObjectHideIconOnBalloonOpen","map","point","type","hintContent","balloonContentBody","iconLayout","iconImageHref","iconImageSize","iconImageOffset"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,GAAhB,EAAqBC,SAArB,EAAgCC,SAAhC,EAA2CC,SAA3C,QAA4D,mBAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CAEA;AACA;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACrB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACG,MAAlB,EAA0BI,MAA1B,IAAoC,CAAxC,EACA;AACIH,IAAAA,QAAQ,GAAG;AAACI,MAAAA,MAAM,EAAER,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBM,WAAzB;AAAsCC,MAAAA,IAAI,EAAE;AAA5C,KAAX;AACH,GAHD,MAKA;AACI,QAAIV,KAAK,CAACW,eAAN,CAAsBJ,MAAtB,IAAgC,CAApC,EACA;AACIH,MAAAA,QAAQ,GAAG;AAACI,QAAAA,MAAM,EAAER,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBM,WAAzB;AAAsCC,QAAAA,IAAI,EAAE;AAA5C,OAAX;AACH,KAHD,MAKA;AAEIN,MAAAA,QAAQ,GAAG;AAACI,QAAAA,MAAM,EAAER,KAAK,CAACW,eAAf;AAAgCD,QAAAA,IAAI,EAAE;AAAtC,OAAX;AACH;AACJ,GAnBoB,CAoBrB;;;AACA,QAAME,SAAS,GAAG;AAACT,IAAAA,MAAM,EAAEH,KAAK,CAACG,MAAf;AAAwBU,IAAAA,OAAO,EAAE,CAAC,yBAAD,EAA4B,sBAA5B;AAAjC,GAAlB;AAEC,sBAAU,QAAC,KAAD;AAAO,IAAA,UAAU,MAAjB;AAAkB,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAzB;AAAsF,IAAA,OAAO,EAAE,KAA/F;AAAA,2BAEH,QAAC,GAAD;AAAK,MAAA,KAAK,EAAEV,QAAZ;AAAA,6BACA,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE;AACJW,UAAAA,MAAM,EAAE,oCADJ;AAEJC,UAAAA,uBAAuB,EAAE,IAFrB;AAGJC,UAAAA,4BAA4B,EAAE,KAH1B;AAIJC,UAAAA,8BAA8B,EAAE;AAJ5B,SAApB;AAAA,kBAMKN,SAAS,CAACT,MAAV,CAAiBgB,GAAjB,CAAsBC,KAAD,iBAClB,QAAC,SAAD;AACI,UAAA,QAAQ,EAAE;AAACC,YAAAA,IAAI,EAAE,OAAP;AAAgBZ,YAAAA,WAAW,EAAEW,KAAK,CAACX;AAAnC,WADd;AAEI,UAAA,UAAU,EAAE;AAACa,YAAAA,WAAW,EAAEF,KAAK,CAACE,WAApB;AAAiCC,YAAAA,kBAAkB,EAAEH,KAAK,CAACG;AAA3D,WAFhB;AAGI,UAAA,OAAO,EAAE,CAAC,GAAGX,SAAS,CAACC,OAAd,CAHb;AAII,UAAA,OAAO,EAAE;AACLW,YAAAA,UAAU,EAAE,eADP;AAELC,YAAAA,aAAa,EAAE,mBAFV;AAGLC,YAAAA,aAAa,EAAE,CAAC,EAAD,EAAK,EAAL,CAHV;AAILC,YAAAA,eAAe,EAAE,CAAC,CAAC,EAAF,EAAM,CAAC,EAAP;AAJZ;AAJb;AAAA;AAAA;AAAA;AAAA,gBADH;AANL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFG;AAAA;AAAA;AAAA;AAAA,UAAV;AA6CJ;;KApEQ5B,S;AAoER;AAED,eAAeA,SAAf","sourcesContent":["import { YMaps, Map, Placemark, Clusterer, GeoObject } from 'react-yandex-maps';\r\nimport React from 'react'\r\nimport classes from './YandexMap.module.css';\r\n\r\n//const mapState = { center: [59.9073, 30.3276], zoom: 10 };\r\n//const markState = {points: [{geometry: [59.87026977960634, 30.26204491830366], hintContent: 'Эллинлайн', balloonContent: 'ул. Зайцева, 3, корп. 2, Санкт-Петербург'}]}\r\n\r\nfunction YandexMap(props){\r\n    //debugger;\r\n    console.log(props.points);\r\n    let mapState = {};\r\n    if (Object.keys(props.points).length == 1)\r\n    {\r\n        mapState = {center: props.points[0].coordinates, zoom: 17};\r\n    }\r\n    else\r\n    {\r\n        if (props.cityCoordinates.length == 0)\r\n        {\r\n            mapState = {center: props.points[0].coordinates, zoom: 10};\r\n        }\r\n        else\r\n        {\r\n\r\n            mapState = {center: props.cityCoordinates, zoom: 10};\r\n        }\r\n    }\r\n    //console.log(props.points[0].hintContent);\r\n    const markState = {points: props.points,  modules: ['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n\r\n     return   (<YMaps enterprise query={{apikey: '5594e597-90cb-48f6-a139-b76c8a42a41a&lang=ru_RU'}} version={\"2.1\"}>\r\n       \r\n            <Map state={mapState}>\r\n            <Clusterer options={{\r\n                            preset: 'islands#invertedVioletClusterIcons',\r\n                            clusterDisableClickZoom: true,\r\n                            clusterHideIconOnBalloonOpen: false,\r\n                            geoObjectHideIconOnBalloonOpen: false\r\n                        }}>\r\n                {markState.points.map((point) => (\r\n                    <GeoObject \r\n                        geometry={{type: \"Point\", coordinates: point.coordinates}} \r\n                        properties={{hintContent: point.hintContent, balloonContentBody: point.balloonContentBody}} \r\n                        modules={[...markState.modules]} \r\n                        options={{\r\n                            iconLayout: 'default#image',\r\n                            iconImageHref: 'images/marker.svg',\r\n                            iconImageSize: [60, 52],\r\n                            iconImageOffset: [-30, -56]\r\n                        }}\r\n                    ></GeoObject>))}\r\n            </Clusterer>\r\n\r\n                {/* <Placemark geometry={[59.87026977960634, 30.26204491830366]}\r\n                properties={{\r\n                    hintContent: \"Эллинлайн\",\r\n                    balloonContent: 'ул. Зайцева, 3, корп. 2, Санкт-Петербург'\r\n                }}\r\n                modules={[\r\n                    'geoObject.addon.balloon', 'geoObject.addon.hint'\r\n                ]}\r\n\r\n                options={{\r\n                    iconImageHref:'images/logo-header.svg',\r\n                    iconImageSize: [30, 42],\r\n                    iconImageOffset: [-5, -38]\r\n                }}>\r\n\r\n\r\n                </Placemark> */}\r\n\r\n            </Map>\r\n          \r\n        </YMaps>)\r\n    \r\n};\r\n\r\nexport default YandexMap;"]},"metadata":{},"sourceType":"module"}