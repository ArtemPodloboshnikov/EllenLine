{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zimin\\\\Desktop\\\\college\\\\Homework\\\\\\u0421\\u0430\\u0439\\u0442\\u044B\\\\React_Apps\\\\Ellinline\\\\client\\\\src\\\\components\\\\Admin\\\\FormDBChange\\\\InsertDB\\\\Sanatorium.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport classes from './Sanatorium.module.css';\nimport InputText from '../../../CustomElements/InputText';\nimport TextArea from '../../../CustomElements/TextArea';\nimport InputNumber from '../../../CustomElements/InputNumber';\nimport DynamicList from '../../../CustomElements/DynamicList';\nimport Button from '../../../CustomElements/Button';\nimport { useForm } from \"react-hook-form\";\nimport Message from '../../../Common/DialogWindow/Message';\nimport FilesUploader from '../../../CustomElements/FilesUploader';\nimport EditMap from '../../../Common/Map/EditMap';\nimport SelectEntered from '../../../CustomElements/SelectEntered';\n\nconst Sanatorium = props => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [formData, setFormData] = useState({});\n  const [dbData, setDbData] = useState({});\n  const [message, setMessage] = useState({\n    style: {\n      display: 'none'\n    },\n    status: '',\n    body: ''\n  });\n  const [cityName, setCityName] = useState('Санкт-Петербург');\n\n  const handleOnSubmit = data => {\n    console.log(data);\n    setFormData(data);\n  };\n\n  let contries_cities = {\n    countries: {},\n    cities: {}\n  };\n\n  if (Object.keys(dbData).length != 0) {\n    console.log(dbData);\n    dbData.countries.map(data => {\n      contries_cities.countries[data.name] = data.id;\n    });\n    dbData.cities.map(data => {\n      contries_cities.cities[data.name] = data.id;\n    });\n  }\n\n  useEffect(() => {\n    async function get() {\n      let result = {};\n      await fetch('http://localhost:4000/api/countries').then(response => {\n        return response.json();\n      }).then(data => {\n        result = {\n          countries: data\n        };\n      });\n      await fetch('http://localhost:4000/api/cities').then(response => {\n        return response.json();\n      }).then(data => {\n        result = { ...result,\n          cities: data\n        };\n      });\n      setDbData(result);\n    }\n\n    get();\n  }, []);\n  useEffect(() => {\n    async function insert() {\n      // const json =  await fetch('http://localhost:4000/api/sanatoriums', {\n      //     method: 'POST',\n      //     headers: {\n      //       'Content-Type': 'application/json;charset=utf-8'\n      //     },\n      //     body: JSON.stringify(formData)\n      // });\n      // console.log(json);\n      // if (json.status === 404)\n      // {\n      //     setMessage({style: {display: 'grid'}, status: json.status, body: json.statusText});\n      //     console.log(message);\n      // }\n      alert('Data send');\n    }\n\n    if (Object.keys(formData).length != 0) {\n      insert();\n    }\n  }, [formData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Message, {\n      setFunction: setMessage,\n      style: message.style,\n      status: message.status,\n      body: message.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: props.className + ' ' + classes.form,\n      onSubmit: handleSubmit(handleOnSubmit),\n      children: [/*#__PURE__*/_jsxDEV(InputText, {\n        register: register({\n          required: true\n        }),\n        name: \"title\",\n        className: classes.inputText,\n        classInput: classes.inputText__input,\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0441\\u0430\\u043D\\u0430\\u0442\\u043E\\u0440\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        register: register({\n          required: true\n        }),\n        name: \"description\",\n        className: classes.textarea,\n        classTitle: classes.textarea__title,\n        classTextArea: classes.textarea__text,\n        title: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n        register: register({\n          required: true\n        }),\n        name: \"stars\",\n        className: classes.inputNumber,\n        placeholder: \"\\u2605\",\n        min: \"1\",\n        max: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FilesUploader, {\n        register: register({\n          required: true\n        }),\n        name: \"files\",\n        className: classes.filesUploader,\n        classInput: classes.filesUploader__text,\n        classPlaceholder: classes.filesUploader__placeholder,\n        placeholder: \"\\u0424\\u043E\\u0442\\u043E \\u0441\\u0430\\u043D\\u0430\\u0442\\u043E\\u0440\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectEntered, {\n        register: register({\n          required: true\n        }),\n        name: \"country\",\n        className: classes.select,\n        placeholder: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0430\",\n        options: Object.keys(contries_cities.countries)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectEntered, {\n        register: register({\n          required: true\n        }),\n        name: \"city\",\n        onChangeFunction: setCityName,\n        className: classes.select,\n        placeholder: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n        options: Object.keys(contries_cities.cities)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditMap, {\n        cityName: cityName,\n        points: [],\n        className: classes.map\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form__services,\n        children: [/*#__PURE__*/_jsxDEV(DynamicList, {\n          name: \"inStock\",\n          register: register({\n            required: true\n          }),\n          className: classes.dynamicList,\n          classInput: classes.dynamicList__input,\n          placeholder: \"\\u0412 \\u043D\\u0430\\u043B\\u0438\\u0447\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DynamicList, {\n          name: \"commonServices\",\n          register: register({\n            required: true\n          }),\n          className: classes.dynamicList,\n          classInput: classes.dynamicList__input,\n          placeholder: \"\\u041E\\u0431\\u0449\\u0438\\u0435 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DynamicList, {\n          name: \"servicesRoom\",\n          register: register({\n            required: true\n          }),\n          className: classes.dynamicList,\n          classInput: classes.dynamicList__input,\n          placeholder: \"\\u0423\\u0441\\u043B\\u0443\\u0433\\u0438 \\u0432 \\u043D\\u043E\\u043C\\u0435\\u0440\\u0430\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        classInput: classes.button__text,\n        value: \"\\u0412\\u043D\\u0435\\u0441\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Sanatorium, \"GkkYzs3YcDxb7nwXE3qzeGYk/9c=\", false, function () {\n  return [useForm];\n});\n\n_c = Sanatorium;\nexport default Sanatorium;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sanatorium\");","map":{"version":3,"sources":["C:/Users/zimin/Desktop/college/Homework/Сайты/React_Apps/Ellinline/client/src/components/Admin/FormDBChange/InsertDB/Sanatorium.jsx"],"names":["React","useState","useEffect","classes","InputText","TextArea","InputNumber","DynamicList","Button","useForm","Message","FilesUploader","EditMap","SelectEntered","Sanatorium","props","register","handleSubmit","errors","formData","setFormData","dbData","setDbData","message","setMessage","style","display","status","body","cityName","setCityName","handleOnSubmit","data","console","log","contries_cities","countries","cities","Object","keys","length","map","name","id","get","result","fetch","then","response","json","insert","alert","className","form","required","inputText","inputText__input","textarea","textarea__title","textarea__text","inputNumber","filesUploader","filesUploader__text","filesUploader__placeholder","select","form__services","dynamicList","dynamicList__input","button","button__text"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport classes from './Sanatorium.module.css'\r\nimport InputText from '../../../CustomElements/InputText'\r\nimport TextArea from '../../../CustomElements/TextArea'\r\nimport InputNumber from '../../../CustomElements/InputNumber'\r\nimport DynamicList from '../../../CustomElements/DynamicList'\r\nimport Button from '../../../CustomElements/Button'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Message from '../../../Common/DialogWindow/Message';\r\nimport FilesUploader from '../../../CustomElements/FilesUploader'\r\nimport EditMap from '../../../Common/Map/EditMap';\r\nimport SelectEntered from '../../../CustomElements/SelectEntered'\r\n\r\nconst Sanatorium = (props) => {\r\n   \r\n    const {register, handleSubmit, errors} = useForm()\r\n    const [formData, setFormData] = useState({}); \r\n    const [dbData, setDbData] = useState({});\r\n    const [message, setMessage] = useState({style: {display: 'none'}, status: '', body: ''});\r\n    const [cityName, setCityName] = useState('Санкт-Петербург');\r\n    const handleOnSubmit = (data)=>{\r\n        console.log(data)\r\n        setFormData(data)\r\n    }\r\n\r\n    let contries_cities = {countries: {}, cities: {}};\r\n\r\n    if (Object.keys(dbData).length != 0) \r\n    {\r\n        console.log(dbData)\r\n        dbData.countries.map(data => {\r\n            contries_cities.countries[data.name] =  data.id;\r\n            \r\n        });\r\n        dbData.cities.map(data => {\r\n            contries_cities.cities[data.name] =  data.id;\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n        async function get()\r\n        {\r\n            let result = {};\r\n            await fetch('http://localhost:4000/api/countries')\r\n              .then((response) => {\r\n                return response.json();\r\n              })\r\n              .then((data) => {\r\n                result = {countries: data};\r\n              });\r\n            await fetch('http://localhost:4000/api/cities')\r\n              .then((response) => {\r\n                return response.json();\r\n              })\r\n              .then((data) => {\r\n                result = {...result, cities: data};\r\n              });\r\n            \r\n            setDbData(result);\r\n           \r\n        }\r\n        get();\r\n\r\n\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n\r\n        async function insert()\r\n        {\r\n       \r\n            // const json =  await fetch('http://localhost:4000/api/sanatoriums', {\r\n            //     method: 'POST',\r\n            //     headers: {\r\n            //       'Content-Type': 'application/json;charset=utf-8'\r\n            //     },\r\n            //     body: JSON.stringify(formData)\r\n            // });\r\n            // console.log(json);\r\n\r\n            // if (json.status === 404)\r\n            // {\r\n            //     setMessage({style: {display: 'grid'}, status: json.status, body: json.statusText});\r\n            //     console.log(message);\r\n            // }\r\n            \r\n            alert('Data send');\r\n            \r\n        }\r\n        if (Object.keys(formData).length != 0)\r\n        {\r\n            insert()\r\n        }\r\n\r\n    }, [formData])\r\n    return (\r\n\r\n        <>\r\n            <Message setFunction={setMessage} style={message.style} status={message.status} body={message.body} />\r\n            <form className={props.className + ' ' + classes.form} onSubmit={handleSubmit(handleOnSubmit)}>\r\n                <InputText register={register({required: true})} name='title' className={classes.inputText} \r\n                classInput={classes.inputText__input} placeholder='Название санатория'/>\r\n            \r\n                <TextArea register={register({required: true})} name='description'\r\n                className={classes.textarea} classTitle={classes.textarea__title} \r\n                classTextArea={classes.textarea__text} title='Описание' placeholder='Введите описание'/>\r\n\r\n                <InputNumber register={register({required: true})} name='stars' \r\n                className={classes.inputNumber} placeholder='★' min='1' max='5'/>\r\n\r\n                <FilesUploader register={register({required: true})} name='files' \r\n                className={classes.filesUploader} classInput={classes.filesUploader__text} \r\n                classPlaceholder={classes.filesUploader__placeholder} placeholder='Фото санатория' />\r\n                \r\n                <SelectEntered register={register({required: true})} name='country' \r\n                className={classes.select} placeholder='Страна' options={Object.keys(contries_cities.countries)} />\r\n\r\n                <SelectEntered register={register({required: true})} name='city' onChangeFunction={setCityName}\r\n                className={classes.select} placeholder='Город' options={Object.keys(contries_cities.cities)} />\r\n\r\n                <EditMap cityName={cityName} points={[]} className={classes.map}/>\r\n\r\n                <div className={classes.form__services}>\r\n                    <DynamicList name='inStock' register={register({required: true})} className={classes.dynamicList} \r\n                    classInput={classes.dynamicList__input} placeholder='В наличии'/>\r\n                    <DynamicList name='commonServices' register={register({required: true})} className={classes.dynamicList} \r\n                    classInput={classes.dynamicList__input} placeholder='Общие услуги'/>\r\n                    <DynamicList name='servicesRoom' register={register({required: true})} className={classes.dynamicList} \r\n                    classInput={classes.dynamicList__input} placeholder='Услуги в номерах'/>\r\n                </div>\r\n\r\n                <Button className={classes.button} classInput={classes.button__text} value='Внести' />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sanatorium\r\n"]},"metadata":{},"sourceType":"module"}