{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zimin\\\\Desktop\\\\college\\\\Homework\\\\\\u0421\\u0430\\u0439\\u0442\\u044B\\\\React_Apps\\\\Ellinline\\\\client\\\\src\\\\components\\\\CustomElements\\\\InputNumber.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport classes from './InputNumber.module.css';\n\nconst InputNumber = props => {\n  _s();\n\n  const [placeholder, setValue] = useState(props.placeholder ? props.placeholder : props.min);\n\n  function CheckValue(e) {\n    let new_value = e.target.value;\n\n    if (new_value < props.min) {\n      setValue(props.min);\n      console.log('under');\n    } else if (new_value > props.max) {\n      setValue(props.max);\n      console.log('above');\n    } else {\n      setValue(new_value);\n      console.log('between');\n    }\n\n    console.log(new_value);\n  } //#region  Zimin`s comment UNCOMMENT IF NEEDED RESTORE\n  // const isNumber = (val) => {\n  //     return !isNaN(val);\n  // }\n  // const plus = ()=>{\n  //     let new_value;\n  //     if (isNaN(value)) new_value = props.min;\n  //     else new_value = Number.parseInt(value) + 1;\n  //     console.log(value)\n  //     if (props.max <= new_value)\n  //         new_value = props.max;\n  //     if (props.min >= new_value)\n  //         new_value = props.min;\n  //     setValue(new_value);\n  // }\n  // const minus = ()=>{\n  //     let new_value;\n  //     if (isNaN(value)) new_value = props.min;\n  //     else new_value = Number.parseInt(value) - 1;\n  //     if (props.min >= new_value)\n  //          new_value = props.min;\n  //     if (props.max <= new_value)\n  //         new_value = props.max;\n  //     setValue(new_value);\n  // }\n  // const printValue = (event)=>{\n  //     let enter_text = Number.parseInt(event.target.value);\n  //     if (isNaN(enter_text)) \n  //     {\n  //         enter_text = undefined; \n  //         event.target.value = ''\n  //     }\n  //     console.log(event.target.value);\n  //     console.log(value);\n  //     if (enter_text >= props.max)\n  //         enter_text = props.max;\n  //     if (enter_text <= props.min)\n  //         enter_text = props.min;\n  //     setValue(enter_text);\n  //     //FIXME value no changed in html\n  // }\n  // const componentDidMount = ()=>{\n  //     //console.log(input.current.value)\n  // }\n  // console.log(value);\n  //#endregion\n\n\n  return (\n    /*#__PURE__*/\n    // UNCOMMENT IF NEEDED RESTORE, ALSO WAS DELETED CLASS classe.input IN input\n    // <div className={classes.inputNumber + ' ' + props.className}>\n    _jsxDEV(\"input\", {\n      className: props.className,\n      type: \"number\",\n      placeholder: placeholder //    value={value} \n      ,\n      min: props.min,\n      max: props.max,\n      onChange: e => CheckValue(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) //     <div onClick={plus} className={classes.plus}>+</div>\n    //     <div onClick={minus} className={classes.minus}>-</div>\n    // </div> \n\n  );\n};\n\n_s(InputNumber, \"e7+zOKjHruwq5Gjs8xIpXn3wWo4=\");\n\n_c = InputNumber;\nexport default InputNumber;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputNumber\");","map":{"version":3,"sources":["C:/Users/zimin/Desktop/college/Homework/Сайты/React_Apps/Ellinline/client/src/components/CustomElements/InputNumber.jsx"],"names":["React","useEffect","useState","classes","InputNumber","props","placeholder","setValue","min","CheckValue","e","new_value","target","value","console","log","max","className"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,WAAD,EAAcC,QAAd,IAA0BL,QAAQ,CAACG,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACC,WAA1B,GAAwCD,KAAK,CAACG,GAA/C,CAAxC;;AAEA,WAASC,UAAT,CAAoBC,CAApB,EAAuB;AACnB,QAAIC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAzB;;AACA,QAAGF,SAAS,GAAGN,KAAK,CAACG,GAArB,EACA;AACID,MAAAA,QAAQ,CAACF,KAAK,CAACG,GAAP,CAAR;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,KAJD,MAKK,IAAGJ,SAAS,GAAGN,KAAK,CAACW,GAArB,EACL;AACIT,MAAAA,QAAQ,CAACF,KAAK,CAACW,GAAP,CAAR;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,KAJI,MAML;AACIR,MAAAA,QAAQ,CAACI,SAAD,CAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACH,GAtB0B,CAwB3B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AAAA;AACI;AACA;AACA;AAAO,MAAA,SAAS,EAAEN,KAAK,CAACY,SAAxB;AACO,MAAA,IAAI,EAAC,QADZ;AAEO,MAAA,WAAW,EAAEX,WAFpB,CAGI;AAHJ;AAIO,MAAA,GAAG,EAAED,KAAK,CAACG,GAJlB;AAIuB,MAAA,GAAG,EAAEH,KAAK,CAACW,GAJlC;AAIuC,MAAA,QAAQ,EAAGN,CAAD,IAAOD,UAAU,CAACC,CAAD;AAJlE;AAAA;AAAA;AAAA;AAAA,YAHJ,CAQI;AACA;AACA;;AAVJ;AAYH,CAvFD;;GAAMN,W;;KAAAA,W;AAyFN,eAAeA,WAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport classes from './InputNumber.module.css'\r\n\r\nconst InputNumber = (props) => {\r\n\r\n    const [placeholder, setValue] = useState(props.placeholder ? props.placeholder : props.min);\r\n\r\n    function CheckValue(e) {\r\n        let new_value = e.target.value;\r\n        if(new_value < props.min)\r\n        {\r\n            setValue(props.min);\r\n            console.log('under')\r\n        }\r\n        else if(new_value > props.max)\r\n        {\r\n            setValue(props.max);\r\n            console.log('above')    \r\n        }\r\n        else \r\n        {\r\n            setValue(new_value);\r\n            console.log('between');\r\n        }\r\n        console.log(new_value);\r\n    }\r\n\r\n    //#region  Zimin`s comment UNCOMMENT IF NEEDED RESTORE\r\n    // const isNumber = (val) => {\r\n    //     return !isNaN(val);\r\n    // }\r\n    // const plus = ()=>{\r\n\r\n    //     let new_value;\r\n    //     if (isNaN(value)) new_value = props.min;\r\n    //     else new_value = Number.parseInt(value) + 1;\r\n    //     console.log(value)\r\n    //     if (props.max <= new_value)\r\n    //         new_value = props.max;\r\n    //     if (props.min >= new_value)\r\n    //         new_value = props.min;\r\n\r\n    //     setValue(new_value);\r\n    // }\r\n    // const minus = ()=>{\r\n\r\n    //     let new_value;\r\n    //     if (isNaN(value)) new_value = props.min;\r\n    //     else new_value = Number.parseInt(value) - 1;\r\n    //     if (props.min >= new_value)\r\n    //          new_value = props.min;\r\n    //     if (props.max <= new_value)\r\n    //         new_value = props.max;\r\n    //     setValue(new_value);\r\n    // }\r\n    // const printValue = (event)=>{\r\n        \r\n    //     let enter_text = Number.parseInt(event.target.value);\r\n    //     if (isNaN(enter_text)) \r\n    //     {\r\n    //         enter_text = undefined; \r\n    //         event.target.value = ''\r\n    //     }\r\n    //     console.log(event.target.value);\r\n    //     console.log(value);\r\n    //     if (enter_text >= props.max)\r\n    //         enter_text = props.max;\r\n    //     if (enter_text <= props.min)\r\n    //         enter_text = props.min;\r\n    //     setValue(enter_text);\r\n    //     //FIXME value no changed in html\r\n    // }\r\n    // const componentDidMount = ()=>{\r\n\r\n    //     //console.log(input.current.value)\r\n    // }\r\n    // console.log(value);\r\n    //#endregion\r\n    return (\r\n        // UNCOMMENT IF NEEDED RESTORE, ALSO WAS DELETED CLASS classe.input IN input\r\n        // <div className={classes.inputNumber + ' ' + props.className}>\r\n        <input className={props.className}  \r\n               type=\"number\"\r\n               placeholder={placeholder} \r\n            //    value={value} \r\n               min={props.min} max={props.max} onChange={(e) => CheckValue(e)}/>\r\n        //     <div onClick={plus} className={classes.plus}>+</div>\r\n        //     <div onClick={minus} className={classes.minus}>-</div>\r\n        // </div> \r\n    )\r\n}\r\n\r\nexport default InputNumber\r\n"]},"metadata":{},"sourceType":"module"}