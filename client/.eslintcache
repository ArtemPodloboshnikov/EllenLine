[{"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Header\\Header.jsx":"1","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Relax\\List.jsx":"2","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Map\\PresentationMap.jsx":"3","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\UpdateDB\\Countries.jsx":"4","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\InsertDB\\Cities.jsx":"5","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\DeleteDB\\Cities.jsx":"6","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Home\\Clients.jsx":"7","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Relax\\Resort.jsx":"8","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\InputText.jsx":"9","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Map\\EditMap.jsx":"10","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\FilesUploader.jsx":"11","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\DialogWindow\\Message.jsx":"12","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\FormBooking.jsx":"13","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Header\\AdminHeader.jsx":"14","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\InputNumber.jsx":"15","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\DeleteDB\\Countries.jsx":"16","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\InsertDB\\Sanatorium.jsx":"17","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Relax\\Relax.jsx":"18","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\countryDescription\\countryDescription.jsx":"19","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\index.js":"20","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\FormDBChange.jsx":"21","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Home\\Home.jsx":"22","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Home\\Advantages.jsx":"23","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\UpdateDB\\Cities.jsx":"24","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Header\\SidebarHeader.jsx":"25","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\Button.jsx":"26","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\DynamicList.jsx":"27","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Relax\\ChooseResort.jsx":"28","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\reportWebVitals.js":"29","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Home\\Services.jsx":"30","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\Slider.jsx":"31","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\InsertDB\\Countries.jsx":"32","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\SelectEntered.jsx":"33","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\ConvertService.jsx":"34","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Footer\\Footer.jsx":"35","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Home\\Reviews.jsx":"36","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Search\\Search.jsx":"37","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\TextArea.jsx":"38","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\SelectOption.jsx":"39","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Tours\\Tours.jsx":"40","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\InfoSection.jsx":"41","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Tours\\Tour.jsx":"42","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Tours\\GeneralInfo.jsx":"43","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\UpToHeader\\UpToHeader.jsx":"44","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\InputDate.jsx":"45"},{"size":4169,"mtime":1611753642767,"results":"46","hashOfConfig":"47"},{"size":5408,"mtime":1611753335094,"results":"48","hashOfConfig":"47"},{"size":2722,"mtime":1611664804822,"results":"49","hashOfConfig":"47"},{"size":3567,"mtime":1611665919292,"results":"50","hashOfConfig":"47"},{"size":3031,"mtime":1611664801804,"results":"51","hashOfConfig":"47"},{"size":2764,"mtime":1611664801690,"results":"52","hashOfConfig":"47"},{"size":3176,"mtime":1611330076529,"results":"53","hashOfConfig":"47"},{"size":6954,"mtime":1611848909425,"results":"54","hashOfConfig":"47"},{"size":601,"mtime":1611844902065,"results":"55","hashOfConfig":"47"},{"size":4886,"mtime":1611664801916,"results":"56","hashOfConfig":"47"},{"size":2284,"mtime":1611664802031,"results":"57","hashOfConfig":"47"},{"size":1267,"mtime":1611664801905,"results":"58","hashOfConfig":"47"},{"size":1628,"mtime":1611854500273,"results":"59","hashOfConfig":"47"},{"size":5471,"mtime":1611664801910,"results":"60","hashOfConfig":"47"},{"size":2817,"mtime":1611665818554,"results":"61","hashOfConfig":"47"},{"size":2812,"mtime":1611666135143,"results":"62","hashOfConfig":"47"},{"size":5832,"mtime":1611667724121,"results":"63","hashOfConfig":"47"},{"size":2912,"mtime":1611753377146,"results":"64","hashOfConfig":"47"},{"size":728,"mtime":1611330076538,"results":"65","hashOfConfig":"47"},{"size":1697,"mtime":1611826759852,"results":"66","hashOfConfig":"47"},{"size":1536,"mtime":1611664801793,"results":"67","hashOfConfig":"47"},{"size":1039,"mtime":1611330076478,"results":"68","hashOfConfig":"47"},{"size":1043,"mtime":1611330076533,"results":"69","hashOfConfig":"47"},{"size":3675,"mtime":1611664801871,"results":"70","hashOfConfig":"47"},{"size":909,"mtime":1611330076553,"results":"71","hashOfConfig":"47"},{"size":811,"mtime":1611664801923,"results":"72","hashOfConfig":"47"},{"size":2414,"mtime":1611664802028,"results":"73","hashOfConfig":"47"},{"size":872,"mtime":1611752667834,"results":"74","hashOfConfig":"47"},{"size":375,"mtime":1611330076024,"results":"75","hashOfConfig":"47"},{"size":2044,"mtime":1611330076449,"results":"76","hashOfConfig":"47"},{"size":1654,"mtime":1611488898053,"results":"77","hashOfConfig":"47"},{"size":2251,"mtime":1611664801811,"results":"78","hashOfConfig":"47"},{"size":2668,"mtime":1611664802042,"results":"79","hashOfConfig":"47"},{"size":586,"mtime":1611651028401,"results":"80","hashOfConfig":"47"},{"size":2965,"mtime":1611664801908,"results":"81","hashOfConfig":"47"},{"size":4253,"mtime":1611330076469,"results":"82","hashOfConfig":"47"},{"size":1011,"mtime":1611409066268,"results":"83","hashOfConfig":"47"},{"size":928,"mtime":1611664802047,"results":"84","hashOfConfig":"47"},{"size":1897,"mtime":1611853933345,"results":"85","hashOfConfig":"47"},{"size":2942,"mtime":1611763383601,"results":"86","hashOfConfig":"47"},{"size":2948,"mtime":1611854239991,"results":"87","hashOfConfig":"47"},{"size":2042,"mtime":1611763689217,"results":"88","hashOfConfig":"47"},{"size":3058,"mtime":1611764563332,"results":"89","hashOfConfig":"47"},{"size":646,"mtime":1611330076542,"results":"90","hashOfConfig":"47"},{"size":1129,"mtime":1611854819123,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},"kc0fd1",{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"95"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"109"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"95"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"109"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"95"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"105"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"109"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"109"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"109"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"109"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"95"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"109"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"95"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"95"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"95"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"101"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"95"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"95"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Header\\Header.jsx",["213","214","215","216","217","218"],"import React, {useState, useEffect} from 'react';\r\nimport classes from './Header.module.css';\r\nimport { Link } from 'react-router-dom'\r\nimport ReactPlayer from 'react-player';\r\nimport UpToHeader from '../UpToHeader/UpToHeader';\r\nimport SidebarHeader from './SidebarHeader';\r\n\r\nconst Header = (props) => {\r\n\r\n    const [treeActive, setTreeActive] = useState('');\r\n    const [scroll, setScroll] = React.useState(0);\r\n\r\n\r\n    const handleScroll = () => {\r\n        setScroll(window.scrollY);\r\n        // console.log(scroll);\r\n    };\r\n    const showTree = ()=>{\r\n       \r\n        setTreeActive(classes.tree_active);\r\n    }\r\n    const hideTree = ()=>{\r\n\r\n        setTreeActive('');\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n        return () => window.removeEventListener(\"scroll\", handleScroll);\r\n\r\n    }, []);\r\n    return (\r\n        <div style={(()=>{\r\n\r\n            // if (Object.key(props.employee).length != 0)\r\n            //     return {display: 'none'}\r\n            \r\n\r\n        })()}>\r\n            \r\n                <input name='search_toggle' type='radio' id={classes.search_active}/>\r\n                <input name='search_toggle' type='radio' id={classes.search_close}/>\r\n                <div className={classes.search}>\r\n                    <label for={classes.search_close} className={classes.search__close}></label>\r\n                </div>\r\n                <header className={classes.header}>\r\n                    <ReactPlayer url='videos/videoHeader.mp4' playing={true} loop={true} muted={true} class={classes.header__video} id=\"bgvideo\"/> \r\n                    <div className={classes.header__content}>\r\n                        <div className={classes.header__buttons}>\r\n                            <Link to='/' className={classes.header__button}>О нас</Link>\r\n                            <Link style={{gridColumn: '2 / 4'}} to='/collaboration' className={classes.header__button}>Санкт-Петербург</Link>\r\n                            <Link to='/'><img src='images/logo-header.svg'/></Link>\r\n                            <Link to='/tours' className={classes.header__button}>Туры</Link>\r\n                            <Link to='/places' className={classes.header__button}>Экскурсии</Link>\r\n                            <div><Link to='/relax' className={classes.header__button} onMouseOver={showTree} onMouseOut={hideTree}>Отдых</Link><div onMouseOver={showTree} onMouseOut={hideTree} id='tree' className={classes.tree + ' ' + treeActive}>\r\n                                <Link className={classes.header__treeItem} to='/relax/sanatorium'>Санатории</Link>\r\n                                <Link className={classes.header__treeItem} to='/relax/pension'>Пансионаты</Link>\r\n                            </div></div>\r\n                            <label for={classes.search_active}><img src='images/Header/loupe.svg' /></label>\r\n                        </div>\r\n                        <div className={classes.header__phone}><a href='tel:+79219733344' className={classes.header__button}>+7 (921) 973 33 44</a></div>\r\n                        <div className={classes.header__links}>\r\n                            <a href='https://vk.com/ellinline' className={classes.header__button}><img src='images/vk.svg'/></a>\r\n                            <a href='https://www.facebook.com/ООО-Эллинлайн-112305267240823/' className={classes.header__button}><img src='images/facebook.svg'/></a>\r\n                            <a href='https://www.instagram.com/ellinlinespb/' className={classes.header__button}><img src='images/instagram.svg'/></a>\r\n                            <a href='/home' className={classes.header__button}><img src='images/youtube.svg'/></a>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                \r\n                <SidebarHeader/>\r\n                {(()=>{\r\n\r\n                    if (scroll > 500){\r\n\r\n                        return <UpToHeader scroll={scroll}/>\r\n                    }\r\n\r\n                })()}\r\n                                \r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n",["219","220"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Relax\\List.jsx",["221","222","223"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Map\\PresentationMap.jsx",["224","225"],"import React from 'react'\r\nimport { YMaps, Map, Placemark, Clusterer, GeoObject } from 'react-yandex-maps';\r\nimport classes from './YandexMap.module.css';\r\n\r\nconst PresentationMap = (props) => {\r\n    let mapState = {};\r\n\r\n    if (Object.keys(props.points).length == 1)\r\n    {\r\n        mapState = {center: props.points[0].coordinates, zoom: 17};\r\n    }\r\n    else\r\n    {\r\n        \r\n        mapState = {center: props.cityCoordinates, zoom: 10};\r\n    }\r\n  \r\n    console.log(props.cityCoordinates);\r\n\r\n    const markState = {points: props.points,  modules: ['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n\r\n    return   (<div className={props.className + ' ' + classes.wrap} id={props.id}>\r\n            \r\n            <YMaps enterprise query={{apikey: '5594e597-90cb-48f6-a139-b76c8a42a41a&lang=ru_RU'}} \r\n               version={\"2.1\"}>\r\n       \r\n            <Map state={mapState}>\r\n            <Clusterer options={{\r\n                            preset: 'islands#invertedVioletClusterIcons',\r\n                            clusterDisableClickZoom: true,\r\n                            clusterHideIconOnBalloonOpen: false,\r\n                            geoObjectHideIconOnBalloonOpen: false\r\n                        }}>\r\n                {markState.points.length ? markState.points.map((point) => (\r\n                    <GeoObject \r\n                        geometry={{type: \"Point\", coordinates: point.coordinates}} \r\n                        properties={{hintContent: point.hintContent, balloonContentBody: point.balloonContentBody}} \r\n                        modules={[...markState.modules]} \r\n                        options={{\r\n                            iconLayout: 'default#image',\r\n                            iconImageHref: 'images/marker.svg',\r\n                            iconImageSize: [60, 52],\r\n                            iconImageOffset: [-30, -56]\r\n                        }}\r\n                    ></GeoObject>)): ''}\r\n            </Clusterer>\r\n\r\n                {/* <Placemark geometry={[59.87026977960634, 30.26204491830366]}\r\n                properties={{\r\n                    hintContent: \"Эллинлайн\",\r\n                    balloonContent: 'ул. Зайцева, 3, корп. 2, Санкт-Петербург'\r\n                }}\r\n                modules={[\r\n                    'geoObject.addon.balloon', 'geoObject.addon.hint'\r\n                ]}\r\n\r\n                options={{\r\n                    iconImageHref:'images/logo-header.svg',\r\n                    iconImageSize: [30, 42],\r\n                    iconImageOffset: [-5, -38]\r\n                }}>\r\n\r\n\r\n                </Placemark> */}\r\n\r\n            </Map>\r\n          \r\n        </YMaps>\r\n        </div>)\r\n}\r\n\r\nexport default PresentationMap\r\n",["226","227"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\UpdateDB\\Countries.jsx",["228","229","230","231"],"import React, {useState, useEffect} from 'react'\r\nimport Message from '../../../Common/DialogWindow/Message';\r\nimport { useForm } from \"react-hook-form\";\r\nimport SelectEntered from '../../../CustomElements/SelectEntered';\r\nimport TextArea from '../../../CustomElements/TextArea';\r\nimport Button from '../../../CustomElements/Button';\r\nimport classes from './Countries.module.css';\r\n\r\nconst Countries = () => {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [message, setMessage] = useState({style: {display: 'none'}, status: '', body: ''});\r\n    const [formData, setFormData] = useState({}); \r\n    const [dbData, setDbData] = useState({});\r\n    const [textAreaValue, setTextAreaValue] = useState();\r\n\r\n    let countries = {};\r\n    let nameCountryIds = {};\r\n\r\n    if (Object.keys(dbData).length != 0)\r\n    {\r\n        dbData.map((country)=>{\r\n\r\n            countries[country.name] = country.description;\r\n            nameCountryIds[country.name] = country.id;\r\n        })\r\n    }\r\n    const handleOnSubmit = (data)=>{\r\n        \r\n        data.id = nameCountryIds[data.country];\r\n        delete data.country;\r\n        setFormData(data);\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        async function get()\r\n        {\r\n            await fetch('http://localhost:4000/api/countries?with=description')\r\n              .then((response) => {\r\n                return response.json();\r\n              })\r\n              .then((data) => {\r\n                setDbData(data);\r\n              });\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        get();\r\n        \r\n        \r\n\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n\r\n        async function insert()\r\n        {\r\n       \r\n            const json =  await fetch('http://localhost:4000/api/countries', {\r\n                method: 'PUT',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n            \r\n\r\n           \r\n            setMessage({style: {display: 'grid'}, status: json.status, body: json.statusText});\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        if (Object.keys(formData).length != 0)\r\n        {\r\n            insert()\r\n        }\r\n\r\n    }, [formData])\r\n    \r\n    return (\r\n        <>\r\n            <Message setFunction={setMessage} style={message.style} \r\n            status={message.status} body={message.body}/>\r\n            <form className={classes.form} onSubmit={handleSubmit(handleOnSubmit)}>\r\n                <SelectEntered register={register({required: true})} name='country'\r\n                className={classes.select} placeholder='Страна' options={Object.keys(countries)} />\r\n                \r\n                <TextArea classTextArea={classes.textarea} register={register({required: true})} name='description'\r\n                className={classes.textarea} title='Описание' placeholder='Введите описание' value={textAreaValue} setValue={setTextAreaValue}/>\r\n\r\n                <div className={classes.buttons}>\r\n                    <Button type='button' setFunction={setTextAreaValue} data={countries} nameOfLink='country'\r\n                    className={classes.button_description} classInput={classes.button__text} value='Получить описание' />\r\n                    <Button className={classes.button_change} classInput={classes.button__text} value='Изменить' />\r\n                </div>\r\n            </form>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Countries\r\n",["232","233"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\InsertDB\\Cities.jsx",["234","235","236","237"],"import React, {useState, useEffect} from 'react'\r\nimport Message from '../../../Common/DialogWindow/Message';\r\nimport { useForm } from \"react-hook-form\";\r\nimport InputText from '../../../CustomElements/InputText';\r\nimport SelectEntered from '../../../CustomElements/SelectEntered';\r\nimport Button from '../../../CustomElements/Button';\r\nimport classes from './Cities.module.css';\r\n\r\nconst Cities = (props) => {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [message, setMessage] = useState({style: {display: 'none'}, status: '', body: ''});\r\n    const [formData, setFormData] = useState({}); \r\n    const [dbData, setDbData] = useState({});\r\n\r\n    let countries = [];\r\n\r\n    if (Object.keys(dbData).length != 0) \r\n    {\r\n        dbData.map(country => {\r\n            countries[country.name] = country.id\r\n        });\r\n    }\r\n    const handleOnSubmit = (data)=>{\r\n        \r\n        data.idCountry = countries[data.country];\r\n        delete data.name; //FIXME Where from 'name' is define?\r\n        setFormData(data);\r\n    }\r\n    useEffect(()=>{\r\n\r\n        async function get()\r\n        {\r\n            await fetch('http://localhost:4000/api/countries')\r\n              .then((response) => {\r\n                return response.json();\r\n              })\r\n              .then((data) => {\r\n                setDbData(data);\r\n              });\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        get();\r\n        \r\n        \r\n\r\n    }, [])\r\n    useEffect(()=>{\r\n\r\n        async function insert()\r\n        {\r\n       \r\n            const json =  await fetch('http://localhost:4000/api/cities', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n            \r\n\r\n           \r\n            setMessage({style: {display: 'grid'}, status: json.status, body: json.statusText});\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        if (Object.keys(formData).length != 0)\r\n        {\r\n            insert()\r\n        }\r\n\r\n    }, [formData])\r\n    //console.log(dbData);\r\n    return (\r\n        <>\r\n            <Message setFunction={setMessage} style={message.style} status={message.status} body={message.body}/>\r\n            <form className={props.className + ' ' + classes.form} onSubmit={handleSubmit(handleOnSubmit)}>\r\n                \r\n                <SelectEntered register={register({required: true})} name='country' className={classes.select} \r\n                options={Object.keys(countries)} placeholder='Название страны'/>\r\n\r\n                <InputText register={register({required: true})} name='city' className={classes.inputText} \r\n                placeholder='Название города'/>\r\n                \r\n\r\n                <Button className={classes.button} classInput={classes.button__text} value='Добавить' />\r\n            </form>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cities\r\n",["238","239"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\DeleteDB\\Cities.jsx",["240","241","242","243","244"],"import React, {useState, useEffect} from 'react'\r\nimport Message from '../../../Common/DialogWindow/Message';\r\nimport { useForm } from \"react-hook-form\";\r\nimport InputText from '../../../CustomElements/InputText';\r\nimport SelectEntered from '../../../CustomElements/SelectEntered';\r\nimport Button from '../../../CustomElements/Button';\r\nimport classes from './Cities.module.css';\r\n\r\nconst Cities = (props) => {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [message, setMessage] = useState({style: {display: 'none'}, status: '', body: ''});\r\n    const [formData, setFormData] = useState({}); \r\n    const [dbData, setDbData] = useState({});\r\n\r\n    let cities = [];\r\n\r\n    if (Object.keys(dbData).length != 0) \r\n    {\r\n        dbData.map(city => {\r\n            cities[city.name] = city.id\r\n        });\r\n    }\r\n    const handleOnSubmit = (data)=>{\r\n        \r\n        data.id = cities[data.city];\r\n        delete data.city;\r\n        setFormData(data);\r\n    }\r\n    useEffect(()=>{\r\n\r\n        async function get()\r\n        {\r\n            await fetch('http://localhost:4000/api/cities')\r\n              .then((response) => {\r\n                return response.json();\r\n              })\r\n              .then((data) => {\r\n                setDbData(data);\r\n              });\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        get();\r\n        \r\n        \r\n\r\n    }, [])\r\n    useEffect(()=>{\r\n\r\n        async function insert()\r\n        {\r\n       \r\n            const json =  await fetch('http://localhost:4000/api/cities', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n            \r\n\r\n           \r\n            setMessage({style: {display: 'grid'}, status: json.status, body: json.statusText});\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        if (Object.keys(formData).length != 0)\r\n        {\r\n            insert()\r\n        }\r\n\r\n    }, [formData])\r\n    //console.log(dbData);\r\n    return (\r\n        <>\r\n            <Message setFunction={setMessage} style={message.style} status={message.status} body={message.body}/>\r\n            <form className={props.className + ' ' + classes.form} onSubmit={handleSubmit(handleOnSubmit)}>\r\n               \r\n                <SelectEntered register={register({required: true})} name='city' className={classes.select} \r\n                options={Object.keys(cities)} placeholder='Название города'/>\r\n\r\n                <Button className={classes.button} classInput={classes.button__text} value='Удалить' />\r\n            </form>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cities\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Home\\Clients.jsx",["245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260"],"import React from 'react'\r\nimport classes from './Clients.module.css';\r\nimport MediaQuery from 'react-responsive';\r\n\r\nconst Clients = () => {\r\n    return (\r\n        <div className=\"section\">\r\n            <div className='section__title_right'>\r\n                <p>Наши клиенты</p>\r\n            </div>\r\n            {/* <div className={ classes.clients + ' ' + classes.clients_border}>\r\n                <div className={ classes.clients__content }>\r\n                    <img src='images/ldpr.png'/>\r\n                    <img src='images/sr.png'/>\r\n                    <img src='images/minnesota.png'/>\r\n                    <img src='images/gazprom.png'/>\r\n                    <img src='images/un.svg'/>\r\n                    <img src='images/rosmorport.png'/>\r\n                    <img src='images/dhl.png' className={ classes.dhl_margin }/>\r\n                    <img src='images/friedrich_ebert.png' className={ classes.friedrichEbert_column }/>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className={ classes.clients + ' ' + classes.clients_border}>\r\n                <div className={ classes.clients__content }>\r\n                    <img src='images/ldpr.png'/>\r\n                    <img src='images/sr.png'/>\r\n                    <img src='images/minnesota.png'/>\r\n                    <img src='images/gazprom.png'/>\r\n                    <img src='images/un.svg'/>\r\n                    <img src='images/rosmorport.png'/>\r\n                    <img src='images/dhl.png' className={ classes.dhl_margin }/>\r\n                    <img src='images/friedrich_ebert.png' className={ classes.friedrichEbert_column }/>\r\n                </div>\r\n            </div> */}\r\n            <MediaQuery query=\"(min-device-width: 1433px)\">\r\n                <div className={ classes.clients + ' ' + classes.clients_border}>\r\n                    <div className={ classes.clients__content }>\r\n                        <img src='images/ldpr.png'/>\r\n                        <img src='images/sr.png'/>\r\n                        <img src='images/minnesota.png'/>\r\n                        <img src='images/gazprom.png'/>\r\n                        <img src='images/un.svg'/>\r\n                        <img src='images/rosmorport.png'/>\r\n                        <img src='images/dhl.png' className={ classes.dhl_margin }/>\r\n                        <img src='images/friedrich_ebert.png' className={ classes.friedrichEbert_column }/>\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n            <MediaQuery query=\"(max-device-width: 1433px)\">\r\n                <div className={ classes.clients__content }>\r\n                    <img src='images/ldpr.png'/>\r\n                    <img src='images/sr.png'/>\r\n                    <img src='images/minnesota.png'/>\r\n                    <img src='images/gazprom.png'/>\r\n                    <img src='images/un.svg'/>\r\n                    <img src='images/rosmorport.png'/>\r\n                    <img src='images/dhl.png'/>\r\n                    <img src='images/friedrich_ebert.png'/>\r\n                </div>\r\n            </MediaQuery>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clients\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Relax\\Resort.jsx",["261","262","263","264","265","266","267","268","269","270"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\InputText.jsx",["271","272"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Map\\EditMap.jsx",["273","274","275","276","277"],"import { YMaps, Map, Placemark, Clusterer, GeoObject } from 'react-yandex-maps';\r\nimport React, {useState, useEffect} from 'react'\r\nimport classes from './YandexMap.module.css';\r\n\r\n//const mapState = { center: [59.9073, 30.3276], zoom: 10 };\r\n//const markState = {points: [{geometry: [59.87026977960634, 30.26204491830366], hintContent: 'Эллинлайн', balloonContent: 'ул. Зайцева, 3, корп. 2, Санкт-Петербург'}]}\r\n\r\n\r\nfunction EditMap(props){\r\n   \r\n   \r\n    const [cityCoordinates, setCityCoordinates] = useState([59.93388253587983, 30.321229494686143]);\r\n    \r\n   \r\n    const newPlacemark = (event) => {\r\n        \r\n        let map = event.originalEvent.target;\r\n        console.log(map);\r\n        map.events.add('click', (e) =>{\r\n\r\n            if (!map.balloon.isOpen()) {\r\n                let coords = e.get('coords');\r\n                map.balloon.open(coords, {\r\n                    contentHeader:'Событие!',\r\n                    contentBody:'<p>Кто-то щелкнул по карте.</p>' +\r\n                        '<p>Координаты щелчка: ' + [\r\n                        coords[0].toPrecision(6),\r\n                        coords[1].toPrecision(6)\r\n                        ].join(', ') + '</p>',\r\n                    contentFooter:'<sup>Щелкните еще раз</sup>'\r\n                });\r\n            \r\n            }\r\n            else {\r\n                map.balloon.close();\r\n            }\r\n            \r\n\r\n        })\r\n\r\n           \r\n            \r\n    \r\n    }\r\n    \r\n    useEffect(()=>{\r\n\r\n       \r\n        async function getGeocode(city)\r\n        {\r\n            let coordinates = [];\r\n            await fetch(`https://geocode-maps.yandex.ru/1.x/?format=json&apikey=5594e597-90cb-48f6-a139-b76c8a42a41a&geocode=${city}`)\r\n            .then(result => result.json())\r\n            .then(data => {\r\n\r\n                let coords =  data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos.split(' ');\r\n                coordinates[0] = Number.parseFloat(coords[1]);\r\n                coordinates[1] = Number.parseFloat(coords[0]);\r\n\r\n            });\r\n\r\n            setCityCoordinates(coordinates);\r\n           \r\n        }\r\n        \r\n        getGeocode(props.cityName);\r\n        \r\n\r\n    }, [props.cityName])\r\n\r\n    //console.log(props.cityName);\r\n\r\n    let mapState = {};\r\n\r\n    if (Object.keys(props.points).length == 1)\r\n    {\r\n        mapState = {center: props.points[0].coordinates, zoom: 17};\r\n    }\r\n    else\r\n    {\r\n        \r\n        mapState = {center: cityCoordinates, zoom: 10};\r\n    }\r\n  \r\n   // console.log(cityCoordinates);\r\n\r\n    const markState = {points: props.points,  modules: ['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n\r\n    return   (<div className={props.className + ' ' + classes.wrap} id={props.id}>\r\n            \r\n            <YMaps enterprise query={{apikey: '5594e597-90cb-48f6-a139-b76c8a42a41a&lang=ru_RU'}} \r\n               version={\"2.1\"}>\r\n       \r\n            <Map state={mapState} onClick={newPlacemark}>\r\n           \r\n            {/* <Clusterer options={{\r\n                            preset: 'islands#invertedVioletClusterIcons',\r\n                            clusterDisableClickZoom: true,\r\n                            clusterHideIconOnBalloonOpen: false,\r\n                            geoObjectHideIconOnBalloonOpen: false\r\n                        }}>\r\n                {markState.points.length ? markState.points.map((point) => (\r\n                    <GeoObject \r\n                        geometry={{type: \"Point\", coordinates: point.coordinates}} \r\n                        properties={{hintContent: point.hintContent, balloonContentBody: point.balloonContentBody}} \r\n                        modules={[...markState.modules]} \r\n                        options={{\r\n                            iconLayout: 'default#image',\r\n                            iconImageHref: 'images/marker.svg',\r\n                            iconImageSize: [60, 52],\r\n                            iconImageOffset: [-30, -56]\r\n                        }}\r\n                    ></GeoObject>)): ''}\r\n            </Clusterer> */}\r\n\r\n                {/* <Placemark geometry={[59.87026977960634, 30.26204491830366]}\r\n                properties={{\r\n                    hintContent: \"Эллинлайн\",\r\n                    balloonContent: 'ул. Зайцева, 3, корп. 2, Санкт-Петербург'\r\n                }}\r\n                modules={[\r\n                    'geoObject.addon.balloon', 'geoObject.addon.hint'\r\n                ]}\r\n\r\n                options={{\r\n                    iconImageHref:'images/logo-header.svg',\r\n                    iconImageSize: [30, 42],\r\n                    iconImageOffset: [-5, -38]\r\n                }}>\r\n\r\n\r\n                </Placemark> */}\r\n\r\n            </Map>\r\n          \r\n        </YMaps>\r\n        </div>)\r\n    \r\n};\r\n\r\nexport default EditMap;","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\FilesUploader.jsx",[],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\DialogWindow\\Message.jsx",["278"],"import React from 'react'\r\nimport classes from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n\r\n    let title = '';\r\n    let text = ''; \r\n    switch (props.status)\r\n    {\r\n        case 404:{\r\n            title = 'Запрос не отправлен';\r\n            text = 'Страница отвечающая за отправку запроса — не была найдена';\r\n            break;\r\n        }\r\n        case 200:{\r\n            title = 'Запрос выполнен';\r\n            text = 'Данные успешно внесены в базу данных';\r\n            break;\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <div className={classes.window} style={props.style}>\r\n                <div className={classes.title}>\r\n                    {title}\r\n                </div>\r\n                <div className={classes.body}>\r\n                    {text}\r\n                </div>\r\n                <div>\r\n                    <div className={classes.close} onClick={() => props.setFunction({style: {display: 'none'}})}></div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.wrap} style={props.style}>\r\n               \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\FormBooking.jsx",["279","280","281"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Header\\AdminHeader.jsx",["282","283","284","285","286","287"],"import React, {useState} from 'react'\r\nimport classes from './AdminHeader.module.css';\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\n\r\nconst AdminHeader = (props) => {\r\n    const [radioChecked, setRadioChecked] = useState('');\r\n    const history = useHistory();\r\n    \r\n   \r\n\r\n    let textColor = ['#0062FF', '#0062FF', '#0062FF', '#0062FF', '#0062FF', '#0062FF', '#0062FF'];\r\n    const {sector, category} = useParams();\r\n    console.log(sector);\r\n   \r\n    let queries_none = '';\r\n    switch (category)\r\n    {\r\n        case 'excursions': textColor[0] = '#333333';\r\n            break;\r\n        case 'tours': textColor[1] = '#333333';\r\n            break;\r\n        case 'sanatorium': textColor[2] = '#333333';\r\n            break;\r\n        case 'pension': textColor[4] = '#333333';\r\n            break;\r\n        case 'countries': textColor[4] = '#333333';\r\n            break;\r\n        case 'cities': textColor[5] = '#333333';\r\n            break;\r\n        case 'languages': textColor[6] = '#333333';\r\n            break;\r\n    } \r\n    \r\n    if (!category) queries_none = classes.header_db__queries_none;\r\n    const current_path = '/admin/db/' + category;\r\n   \r\n\r\n    if ((radioChecked != '') && (document.location.pathname != (current_path + radioChecked)))\r\n    {\r\n        history.push(current_path + radioChecked);\r\n    }\r\n\r\n\r\n    \r\n   // console.log(document.location.pathname + radioChecked + ' : ' + current_path);\r\n    const radioChangeQueries = (e) => {\r\n\r\n        \r\n        switch(e.target.id)\r\n        {\r\n            case 'insert': \r\n                history.push(current_path + '/insert');\r\n                setRadioChecked('/insert'); \r\n                break;\r\n            case 'update': \r\n                history.push(current_path + '/update');\r\n                setRadioChecked('/update');  \r\n                break;\r\n            case 'delete': \r\n                history.push(current_path + '/delete');\r\n                setRadioChecked('/delete');  \r\n                break;\r\n        }\r\n        console.log(e.target.id)\r\n    }\r\n    const clickOnSector = (e) =>{\r\n\r\n        switch(e.target.id)\r\n        {\r\n            case 'db': \r\n                history.push('/admin/db/');\r\n                //setRadioChecked('/insert'); \r\n                break;\r\n            case 'update': \r\n                history.push(current_path + '/update');\r\n                setRadioChecked('/update');  \r\n                break;\r\n            case 'delete': \r\n                history.push(current_path + '/delete');\r\n                setRadioChecked('/delete');  \r\n                break;\r\n        }\r\n    }\r\n    let content = [];\r\n    content[0] = (<div className={classes.header_db}>\r\n        <div className={classes.header_db__parameters}>\r\n            <Link to='/admin/db/countries' style={{color: textColor[4]}}>Страны</Link>\r\n            <Link to='/admin/db/cities' style={{color: textColor[5]}}>Города</Link>\r\n            <Link to='/admin/db/languages' style={{color: textColor[6]}}>Языки</Link>\r\n        </div>\r\n        <div className={classes.header_db__trips}>\r\n            <Link to='/admin/db/excursions' style={{color: textColor[0]}}>Экскурсии</Link>\r\n            <Link to='/admin/db/tours' style={{color: textColor[1]}}>Туры</Link>\r\n        </div>\r\n        <div className={classes.header_db__queries + ' ' + queries_none}>\r\n                <div>\r\n                    <input type='radio' name='query' id='insert' onChange={radioChangeQueries}/>\r\n                    <label className='radio_button' for='insert'>Внести</label>\r\n\r\n                </div>\r\n                <div>\r\n                    <input type='radio' name='query' id='update' onChange={radioChangeQueries}/>\r\n                    <label className='radio_button' for='update'>Обновить</label>\r\n                </div>\r\n                <div>\r\n                    <input type='radio' name='query' id='delete' onChange={radioChangeQueries}/>\r\n                    <label className='radio_button' for='delete'>Удалить</label>\r\n                </div>\r\n                \r\n        </div>\r\n        <div className={classes.header_db__relax}>\r\n            <Link to='/admin/db/sanatorium' style={{color: textColor[2]}}>Санатории</Link>\r\n            <Link to='/admin/db/pension' style={{color: textColor[3]}}>Пансионаты</Link>\r\n        </div>\r\n    </div>)\r\n\r\n    content[1] = (<div className={classes.header_admin}>\r\n\r\n                <div id='db' onClick={clickOnSector}>\r\n                    База данных\r\n                </div>\r\n                <div id='activity' onClick={clickOnSector}>\r\n                    Активность на сайте\r\n                </div>\r\n                <div id='orders' onClick={clickOnSector}>\r\n                    Заказы\r\n                </div>\r\n                <div id='pages' onClick={clickOnSector}>\r\n                    Страницы\r\n                </div>\r\n                <div id='roles' onClick={clickOnSector}>\r\n                    Роли\r\n                </div>\r\n                <div id='db' onClick={clickOnSector}>\r\n                    Что-то ещё\r\n                </div>\r\n    </div>);\r\n\r\n    return (()=>{\r\n\r\n        console.log(sector);\r\n        if (sector === undefined)\r\n        {\r\n            return content[1];\r\n        }\r\n        else \r\n        if (sector == 'db') \r\n        {\r\n            return content[0];\r\n        }\r\n\r\n    })();\r\n}\r\n\r\nexport default AdminHeader\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\InputNumber.jsx",["288","289"],"import React, {useEffect, useState} from 'react'\r\nimport classes from './InputNumber.module.css'\r\n\r\nconst InputNumber = (props) => {\r\n\r\n    const [value, setValue] = useState(props.value ? props.value : NaN);\r\n\r\n    function CheckValue(e) {\r\n        let new_value = parseInt(e.target.value);\r\n        if(new_value < props.min)\r\n        {\r\n            setValue(props.min);\r\n        }\r\n        else if(new_value > props.max)\r\n        {\r\n            setValue(props.max);    \r\n        }\r\n        else \r\n        {\r\n            setValue(new_value);\r\n        }\r\n    }\r\n\r\n    //#region  Zimin`s comment UNCOMMENT IF NEEDED RESTORE\r\n    // const isNumber = (val) => {\r\n    //     return !isNaN(val);\r\n    // }\r\n    // const plus = ()=>{\r\n\r\n    //     let new_value;\r\n    //     if (isNaN(value)) new_value = props.min;\r\n    //     else new_value = Number.parseInt(value) + 1;\r\n    //     console.log(value)\r\n    //     if (props.max <= new_value)\r\n    //         new_value = props.max;\r\n    //     if (props.min >= new_value)\r\n    //         new_value = props.min;\r\n\r\n    //     setValue(new_value);\r\n    // }\r\n    // const minus = ()=>{\r\n\r\n    //     let new_value;\r\n    //     if (isNaN(value)) new_value = props.min;\r\n    //     else new_value = Number.parseInt(value) - 1;\r\n    //     if (props.min >= new_value)\r\n    //          new_value = props.min;\r\n    //     if (props.max <= new_value)\r\n    //         new_value = props.max;\r\n    //     setValue(new_value);\r\n    // }\r\n    // const printValue = (event)=>{\r\n        \r\n    //     let enter_text = Number.parseInt(event.target.value);\r\n    //     if (isNaN(enter_text)) \r\n    //     {\r\n    //         enter_text = undefined; \r\n    //         event.target.value = ''\r\n    //     }\r\n    //     console.log(event.target.value);\r\n    //     console.log(value);\r\n    //     if (enter_text >= props.max)\r\n    //         enter_text = props.max;\r\n    //     if (enter_text <= props.min)\r\n    //         enter_text = props.min;\r\n    //     setValue(enter_text);\r\n    //     //FIXME value no changed in html\r\n    // }\r\n    // const componentDidMount = ()=>{\r\n\r\n    //     //console.log(input.current.value)\r\n    // }\r\n    // console.log(value);\r\n    //#endregion\r\n\r\n    return (\r\n        // UNCOMMENT IF NEEDED RESTORE, ALSO WAS DELETED CLASS classe.input IN input\r\n        // <div className={classes.inputNumber + ' ' + props.className}>\r\n        <input className={props.className}  \r\n               type=\"number\"\r\n               placeholder={props.placeholder} \r\n               value={value} \r\n               min={props.min} max={props.max} onChange={(e) => CheckValue(e)}/>\r\n        //     <div onClick={plus} className={classes.plus}>+</div>\r\n        //     <div onClick={minus} className={classes.minus}>-</div>\r\n        // </div> \r\n    )\r\n}\r\n\r\nexport default InputNumber\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\DeleteDB\\Countries.jsx",["290","291","292","293","294","295","296"],"import React, {useState, useEffect} from 'react'\r\nimport Message from '../../../Common/DialogWindow/Message';\r\nimport { useForm } from 'react-hook-form';\r\nimport SelectEntered from '../../../CustomElements/SelectEntered';\r\nimport TextArea from '../../../CustomElements/TextArea';\r\nimport Button from '../../../CustomElements/Button';\r\nimport classes from './Countries.module.css';\r\n\r\nconst Countries = () => {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [message, setMessage] = useState({style: {display: 'none'}, status: '', body: ''});\r\n    const [formData, setFormData] = useState({}); \r\n    const [dbData, setDbData] = useState({});\r\n    const [textAreaValue, setTextAreaValue] = useState();\r\n\r\n    let nameCountryIds = {};\r\n\r\n    if (Object.keys(dbData).length != 0)\r\n    {\r\n        dbData.map((country)=>{\r\n\r\n            nameCountryIds[country.name] = country.id;\r\n        })\r\n    }\r\n    const handleOnSubmit = (data)=>{\r\n        \r\n        data.id = nameCountryIds[data.country];\r\n        delete data.country;\r\n        setFormData(data);\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        async function get()\r\n        {\r\n            await fetch('http://localhost:4000/api/countries')\r\n              .then((response) => {\r\n                return response.json();\r\n              })\r\n              .then((data) => {\r\n                setDbData(data);\r\n              });\r\n            \r\n\r\n            \r\n            \r\n        }\r\n        get();\r\n        \r\n        \r\n\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n\r\n        async function delete_row()\r\n        {\r\n       \r\n            const json =  await fetch('http://localhost:4000/api/countries', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n            \r\n\r\n           \r\n            setMessage({style: {display: 'grid'}, status: json.status, body: json.statusText});\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        if (Object.keys(formData).length != 0)\r\n        {\r\n            delete_row();\r\n        }\r\n\r\n    }, [formData])\r\n    \r\n    return (\r\n        <>\r\n            <Message setFunction={setMessage} style={message.style} \r\n            status={message.status} body={message.body}/>\r\n            <form className={classes.form} onSubmit={handleSubmit(handleOnSubmit)}>\r\n                <SelectEntered register={register({required: true})} name='country'\r\n                className={classes.select} placeholder='Страна' options={Object.keys(nameCountryIds)} />\r\n                   \r\n                <Button className={classes.button} value='Удалить' />\r\n            </form>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Countries\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\InsertDB\\Sanatorium.jsx",["297","298","299","300","301"],"import React, {useState, useEffect} from 'react'\r\nimport classes from './Sanatorium.module.css'\r\nimport InputText from '../../../CustomElements/InputText'\r\nimport TextArea from '../../../CustomElements/TextArea'\r\nimport InputNumber from '../../../CustomElements/InputNumber'\r\nimport DynamicList from '../../../CustomElements/DynamicList'\r\nimport Button from '../../../CustomElements/Button'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Message from '../../../Common/DialogWindow/Message';\r\nimport FilesUploader from '../../../CustomElements/FilesUploader'\r\nimport EditMap from '../../../Common/Map/EditMap';\r\nimport SelectEntered from '../../../CustomElements/SelectEntered'\r\n\r\nconst Sanatorium = (props) => {\r\n   \r\n    const {register, handleSubmit, errors} = useForm()\r\n    const [formData, setFormData] = useState({}); \r\n    const [dbData, setDbData] = useState({});\r\n    const [message, setMessage] = useState({style: {display: 'none'}, status: '', body: ''});\r\n    const [cityName, setCityName] = useState('Санкт-Петербург');\r\n    const handleOnSubmit = (data)=>{\r\n        console.log(data)\r\n        setFormData(data)\r\n    }\r\n\r\n    let contries_cities = {countries: {}, cities: {}};\r\n\r\n    if (Object.keys(dbData).length != 0) \r\n    {\r\n        console.log(dbData)\r\n        dbData.countries.map(data => {\r\n            contries_cities.countries[data.name] =  data.id;\r\n            \r\n        });\r\n        dbData.cities.map(data => {\r\n            contries_cities.cities[data.name] =  data.id;\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n        async function get()\r\n        {\r\n            let result = {};\r\n            await fetch('http://localhost:4000/api/countries')\r\n              .then((response) => {\r\n                return response.json();\r\n              })\r\n              .then((data) => {\r\n                result = {countries: data};\r\n              });\r\n            await fetch('http://localhost:4000/api/cities')\r\n              .then((response) => {\r\n                return response.json();\r\n              })\r\n              .then((data) => {\r\n                result = {...result, cities: data};\r\n              });\r\n            \r\n            setDbData(result);\r\n           \r\n        }\r\n        get();\r\n\r\n\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n\r\n        async function insert()\r\n        {\r\n       \r\n            // const json =  await fetch('http://localhost:4000/api/sanatoriums', {\r\n            //     method: 'POST',\r\n            //     headers: {\r\n            //       'Content-Type': 'application/json;charset=utf-8'\r\n            //     },\r\n            //     body: JSON.stringify(formData)\r\n            // });\r\n            // console.log(json);\r\n\r\n            // if (json.status === 404)\r\n            // {\r\n            //     setMessage({style: {display: 'grid'}, status: json.status, body: json.statusText});\r\n            //     console.log(message);\r\n            // }\r\n            \r\n            alert('Data send');\r\n            \r\n        }\r\n        if (Object.keys(formData).length != 0)\r\n        {\r\n            insert()\r\n        }\r\n\r\n    }, [formData])\r\n    return (\r\n\r\n        <>\r\n            <Message setFunction={setMessage} style={message.style} status={message.status} body={message.body} />\r\n            <form className={props.className + ' ' + classes.form} onSubmit={handleSubmit(handleOnSubmit)}>\r\n                <InputText register={register({required: true})} name='title' className={classes.inputText} \r\n                classInput={classes.inputText__input} placeholder='Название санатория'/>\r\n            \r\n                <TextArea register={register({required: true})} name='description'\r\n                className={classes.textarea} classTitle={classes.textarea__title} \r\n                classTextArea={classes.textarea__text} title='Описание' placeholder='Введите описание'/>\r\n\r\n                <InputNumber register={register({required: true})} name='stars' \r\n                className={classes.inputNumber} placeholder='★' min='1' max='5'/>\r\n\r\n                <FilesUploader register={register({required: true})} name='files' \r\n                className={classes.filesUploader} classInput={classes.filesUploader__text} \r\n                classPlaceholder={classes.filesUploader__placeholder} placeholder='Фото санатория' />\r\n                \r\n                <SelectEntered register={register({required: true})} name='country' \r\n                className={classes.select} placeholder='Страна' options={Object.keys(contries_cities.countries)} />\r\n\r\n                <SelectEntered register={register({required: true})} name='city' onChangeFunction={setCityName}\r\n                className={classes.select} placeholder='Город' options={Object.keys(contries_cities.cities)} />\r\n\r\n                <EditMap cityName={cityName} points={[]} className={classes.map}/>\r\n\r\n                <div className={classes.form__services}>\r\n                    <DynamicList name='inStock' register={register({required: true})} className={classes.dynamicList} \r\n                    classInput={classes.dynamicList__input} placeholder='В наличии'/>\r\n                    <DynamicList name='commonServices' register={register({required: true})} className={classes.dynamicList} \r\n                    classInput={classes.dynamicList__input} placeholder='Общие услуги'/>\r\n                    <DynamicList name='servicesRoom' register={register({required: true})} className={classes.dynamicList} \r\n                    classInput={classes.dynamicList__input} placeholder='Услуги в номерах'/>\r\n                </div>\r\n\r\n                <Button className={classes.button} classInput={classes.button__text} value='Внести' />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sanatorium\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Relax\\Relax.jsx",["302","303","304","305","306","307","308","309","310"],"import React, {useEffect, useState} from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport List from './List.jsx'; \r\nimport CountryDescription from '../Common/countryDescription/countryDescription';\r\nimport classes from './Relax.module.css';\r\nimport ChooseResort from './ChooseResort.jsx';\r\nimport Resort from './Resort.jsx';\r\nimport ky from 'ky';\r\n\r\n\r\n\r\n    \r\nconst Relax = () => {\r\n    const [sanatoriums, setSanatoriums] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        document.title = `Отдых`;\r\n        //#region Old Quest\r\n        // async function getData(){\r\n    \r\n        //     const json =  await ky.get('http://localhost:4000/getSanatoriums').json();\r\n        //     setSanatoriums(json);\r\n        //     let bufCountries = [];\r\n        //     sanatoriums.map((sanatorium) => { \r\n\r\n        //         bufCountries.push({nameCountry: sanatorium.nameCountry, descriptionCountry: sanatorium.descriptionCountry});\r\n        //         delete sanatorium.nameCountry;\r\n        //         delete sanatorium.descriptionCountry;\r\n        //     })\r\n        //     setCountries(bufCountries);\r\n        // }\r\n\r\n        // getData();\r\n        //#endregion\r\n\r\n        // async function getSanatoriums() \r\n        // {\r\n        //     const answer = await fetch('http://localhost:4000/api/sanatoriums')\r\n        //     .then((res) => \r\n        //     {\r\n        //         return res.json();\r\n        //     })\r\n        //     .then((data) => \r\n        //     {\r\n        //         console.log('Returned: \\n');\r\n        //         console.log(data);\r\n        //     });\r\n        //     console.log('Answer: \\n');\r\n        //     console.log(answer);\r\n        // }\r\n\r\n        // getSanatoriums();\r\n    });\r\n    \r\n    \r\n    let points = [];\r\n    sanatoriums.map((sanatorium) => \r\n    { \r\n        points.push({\r\n            coordinates: [sanatorium.coordinates.x, sanatorium.coordinates.y],\r\n            hintContent: sanatorium.title, balloonContentBody: sanatorium.address});\r\n    });\r\n    const cityCoordinates = [58.52192654163379,31.282977010801268];\r\n    \r\n    \r\n    return (\r\n        <div className={classes.relax}>\r\n            {/* THIS MAYBE STUPID SHIT */}\r\n            <Route exact path='/relax' component={ChooseResort}></Route>\r\n            <Route exact path='/relax/:category' component={ChooseResort}></Route>\r\n            {/* PLEASE FIX THIS, IF THAT`S NOT HOW IT`S DONE, ALSO THERE ANOTHER <Route/> in <ChooseResort/>*/}\r\n\r\n            <Route exact path='/relax/:category/:id' component={Resort}></Route>\r\n            {/* <Route path='/relax/:category' component={ChooseResort}></Route> */}\r\n\r\n            \r\n            {/* <CountryDescription countries={countries} />\r\n            <List sanatoriums={sanatoriums} points={points} cityCoordinates={cityCoordinates} /> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Relax\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\countryDescription\\countryDescription.jsx",["311"],"import React from 'react'\r\nimport classes from './countryDescription.module.css';\r\n\r\nconst CountryDescription = (props) => {\r\n\r\n    console.log('List: ' + props.countries );\r\n    return (\r\n        <div className={classes.country}>\r\n            <div className={classes.country__mark}>\r\n                <img src='images/Relax/flag.svg' />\r\n            </div>\r\n            <div className={classes.country__description}>\r\n                {(()=>{\r\n                    if (!props.countries){\r\n\r\n                        return props.countries[0].descriptionCountry \r\n                    }\r\n                    else {return ''};\r\n                })()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryDescription\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\index.js",[],["312","313"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\FormDBChange.jsx",[],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Home\\Home.jsx",["314"],"import React, { useEffect, useState } from 'react'\r\nimport Services from './Services'\r\nimport Advantages from './Advantages';\r\nimport Reviews from './Reviews';\r\nimport Clients from './Clients';\r\nimport QRcode from './QRcode'\r\nimport classes from './Home.module.css';\r\nimport ky from 'ky';\r\n\r\nfunction Home() {\r\n\r\n    const [data, setData] = useState({advantages: [], services: []});\r\n    useEffect(() => {\r\n        // Обновляем заголовок документа, используя API браузера\r\n        document.title = `О нас`;\r\n\r\n        async function getData(){\r\n    \r\n          const json =  await ky.get('http://localhost:4000/file/getHomePage').json();\r\n          setData(json);\r\n          \r\n      }\r\n\r\n      getData()\r\n        \r\n      }, []);\r\n    console.log(data);\r\n\r\n    return (\r\n        <div>\r\n          <Services data={data.services}/>\r\n          <Advantages data={data.advantages}/>\r\n          <Reviews/>\r\n          <Clients/>\r\n          <QRcode/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Home\\Advantages.jsx",["315","316","317"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\UpdateDB\\Cities.jsx",["318","319","320","321","322","323"],"import React, {useState, useEffect} from 'react'\r\nimport Message from '../../../Common/DialogWindow/Message';\r\nimport { useForm } from \"react-hook-form\";\r\nimport InputText from '../../../CustomElements/InputText';\r\nimport SelectEntered from '../../../CustomElements/SelectEntered';\r\nimport Button from '../../../CustomElements/Button';\r\nimport classes from './Cities.module.css';\r\n\r\nconst Cities = (props) => {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [message, setMessage] = useState({style: {display: 'none'}, status: '', body: ''});\r\n    const [formData, setFormData] = useState({}); \r\n    const [dbData, setDbData] = useState({});\r\n\r\n    let contries_cities = {countries: {}, cities: {}};\r\n\r\n    if (Object.keys(dbData).length != 0) \r\n    {\r\n        console.log(dbData)\r\n        dbData.countries.map(data => {\r\n            contries_cities.countries[data.name] =  data.id;\r\n            \r\n        });\r\n        dbData.cities.map(data => {\r\n            contries_cities.cities[data.name] =  data.id;\r\n        });\r\n    }\r\n    const handleOnSubmit = (data)=>{\r\n        \r\n        data.idCountry = contries_cities.countries[data.country];\r\n        data.idCity = contries_cities.cities[data.city];\r\n        delete data.country;\r\n        delete data.city;\r\n        setFormData(data);\r\n    }\r\n    useEffect(()=>{\r\n\r\n        async function get()\r\n        {\r\n            let result = {};\r\n            await fetch('http://localhost:4000/api/countries')\r\n              .then((response) => {\r\n                return response.json();\r\n              })\r\n              .then((data) => {\r\n                result = {countries: data};\r\n              });\r\n            await fetch('http://localhost:4000/api/cities')\r\n              .then((response) => {\r\n                return response.json();\r\n              })\r\n              .then((data) => {\r\n                result = {...result, cities: data};\r\n              });\r\n            \r\n            setDbData(result);\r\n           \r\n        }\r\n        get();\r\n        \r\n        \r\n\r\n    }, [])\r\n    useEffect(()=>{\r\n\r\n        async function insert()\r\n        {\r\n       \r\n            const json =  await fetch('http://localhost:4000/api/cities', {\r\n                method: 'PUT',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n            \r\n\r\n           \r\n            setMessage({style: {display: 'grid'}, status: json.status, body: json.statusText});\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        if (Object.keys(formData).length != 0)\r\n        {\r\n            insert()\r\n        }\r\n\r\n    }, [formData])\r\n    console.log(contries_cities);\r\n    return (\r\n        <>\r\n            <Message setFunction={setMessage} style={message.style} status={message.status} body={message.body}/>\r\n            <form className={props.className + ' ' + classes.form} onSubmit={handleSubmit(handleOnSubmit)}>\r\n                \r\n                <SelectEntered register={register({required: true})} name='country' className={classes.select} \r\n                options={Object.keys(contries_cities.countries)} placeholder='Название страны'/>\r\n\r\n                <SelectEntered register={register({required: true})} name='city' className={classes.select} \r\n                options={Object.keys(contries_cities.cities)} placeholder='Название города'/>\r\n                \r\n\r\n                <Button className={classes.button} classInput={classes.button__text} value='Обновить' />\r\n            </form>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cities\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Header\\SidebarHeader.jsx",["324","325","326","327","328"],"import React from 'react';\r\nimport classes from './SidebarHeader.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SidebarHeader = () => {\r\n    return (\r\n        <aside className={classes.aside}>\r\n            <div className={classes.aside__links}>\r\n                <Link to='/home' className={classes.header__button}><img src='images/logo-header.svg'/></Link>\r\n                <Link to='/trips' className={classes.header__button}><img src='images/suitcase.svg'/></Link>\r\n                <Link to='/places' className={classes.header__button}><img src='images/hotel.svg'/></Link>\r\n                <Link to='/attractions' className={classes.header__button}><img src='images/tower.svg'/></Link>\r\n                <Link to='/collaboration' className={classes.header__button}><img src='images/collaboration.svg'/></Link>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default SidebarHeader\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\Button.jsx",["329","330"],"import React from 'react'\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n\r\n    let type = 'submit';\r\n    if (props.type == 'button')\r\n    {\r\n        type = 'button';\r\n    }\r\n    const onClick = () => {\r\n\r\n        let link = document.getElementsByName(props.nameOfLink)[0].value;\r\n        props.setFunction(props.data[link]);\r\n    }\r\n    return (\r\n        \r\n        <div className={classes.wrap + ' ' + props.className}>\r\n            <input onClick={() => {\r\n                \r\n                if (type == 'button') \r\n                {\r\n\r\n                    onClick();\r\n                }\r\n                \r\n            }} className={classes.input + ' ' + props.classInput} \r\n            value={props.value} type={type}/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Button\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\DynamicList.jsx",["331"],"import React, {useState} from 'react'\r\nimport classes from './DynamicList.module.css'\r\n\r\nconst CreateInput = (params)=>{\r\n\r\n    return (\r\n        <div className={classes.wrap}>\r\n            <div id={params.id} onClick={params.minusOnClick} className={classes.controls}>-</div>\r\n            <input name={params.name + params.id}  ref={params.register} id={params.id} \r\n            className={classes.input + ' ' + params.classInput} value={params.value[params.id]} \r\n            placeholder={params.placeholder} onChange={params.onChange}/>\r\n            <div onClick={params.plusOnClick} className={classes.controls}>+</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DynamicList = (props) => {\r\n   \r\n    const [value, setValue] = useState([props.value]);\r\n    const printValue = (e) => {\r\n\r\n        let new_value = [...value];\r\n        new_value[Number.parseInt(e.target.id)] =  e.target.value;\r\n        setValue(new_value);\r\n    }\r\n\r\n    const [countMemberArray, setCountMemberArray] = useState(1);\r\n    const inputs = [];\r\n\r\n    for(let i = 0; i < countMemberArray; i++){\r\n\r\n        inputs.push(\r\n            <>\r\n                <CreateInput register={props.register} name={props.name} \r\n                classInput={props.classInput} id={i} value={value} onChange={printValue} \r\n                placeholder={props.placeholder} plusOnClick={()=>{\r\n                    \r\n                    setCountMemberArray(countMemberArray + 1);\r\n                    setValue([...value, ''])\r\n                }}\r\n                minusOnClick={(e)=>{\r\n                    if (countMemberArray==1)\r\n                    {\r\n                        return;\r\n                    }\r\n                    else \r\n                    {\r\n\r\n                        setCountMemberArray(countMemberArray - 1);\r\n                        let new_array = [...value];\r\n                        //console.log(e.target.id);\r\n                        new_array.splice(e.target.id, 1);\r\n                        let name = document.getElementsByName(props.name + e.target.id);\r\n                        name.value = '';\r\n                        setValue(new_array);\r\n                    }\r\n                }}\r\n                />\r\n            </>\r\n        )\r\n\r\n    }\r\n    \r\n    //console.log(value)\r\n    return (\r\n        <div className={classes.inputs + ' ' + props.className}>\r\n            {inputs}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DynamicList;\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Relax\\ChooseResort.jsx",[],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\reportWebVitals.js",[],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Home\\Services.jsx",["332","333","334"],"import React from 'react'\r\nimport classes from './Services.module.css';\r\nimport MediaQuery from 'react-responsive';\r\n\r\nconst Services = (props) => {\r\n    \r\n    if (props.data.length == 0) return(<></>);\r\n    const servicesWeb = [];\r\n    let i = 0;\r\n    const cssClassBlocks = [classes.block__template_right, classes.block__template_left];\r\n    const cssClassText = [classes.block__text_left, classes.block__text_right];\r\n    \r\n    props.data.map((d, index)=>{\r\n\r\n        if (i > 1) i = 0;\r\n        \r\n        servicesWeb.push(<div key={index} className={ classes.services__block + ' ' + cssClassBlocks[i] }>\r\n            <div className={classes.block__image} style={{backgroundImage: 'url(' + d.image + ')'}}>\r\n                \r\n            </div>\r\n        \r\n            <div className={classes.block__text + ' ' + cssClassText[i]}>\r\n                <p>{d.text}</p>\r\n            </div>\r\n            <div className={ classes.block__number }>\r\n            \r\n                <p>{d.id}</p>\r\n                \r\n            </div>\r\n        </div>)\r\n\r\n        i++;\r\n\r\n    });\r\n\r\n    const servicesMobile = [];\r\n    props.data.map((d, index)=>{\r\n\r\n        servicesMobile.push(\r\n            <div key={index} className={ classes.services__block }>\r\n                <div className={ classes.block__ImageText } style={{backgroundImage: 'url(' + d.image + ')'}}>\r\n                    <p>{d.text}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    })\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"section__title_left\">\r\n                <p>Наши услуги</p>\r\n            </div>\r\n            <div className={ classes.services }>\r\n                <MediaQuery query=\"(min-device-width: 1433px)\">\r\n                    {servicesWeb}\r\n                </MediaQuery>\r\n                <MediaQuery query=\"(max-device-width: 1433px)\">\r\n                    {servicesMobile}\r\n                </MediaQuery>\r\n            </div>\r\n           \r\n          \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Services\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\Slider.jsx",["335","336","337","338"],"import React, { useState } from 'react';\r\nimport classes from './Slider.module.css';\r\n\r\nconst Slider = (props) => {\r\n    //images is massive, full of src like: http://mlp, ./images/image/jpg\r\n    const[images, setImages] = useState(props.images);\r\n    const[index, setIndex] = useState(props.index ? props.index : 0);\r\n\r\n    function AddImages() {\r\n        let elements = [];\r\n        if(images && images.length != 0)\r\n        {\r\n            for(let i = 0;i < images.length; i++)\r\n            {\r\n                elements.push(<img className={classes.item + (i == index ? ' ' + classes.active : '')} src={images[i]}></img>)\r\n            }\r\n        }\r\n        return elements;\r\n    }\r\n\r\n    function OnClick(e) {\r\n        // console.log(e.target == <i></i>);\r\n        if(e.currentTarget.classList.contains(classes.right))\r\n        {\r\n            //right\r\n            if(index < images.length - 1)\r\n                setIndex(index + 1);\r\n            console.log('right');\r\n        }\r\n        else\r\n        {\r\n            //left\r\n            if(index > 0)\r\n                setIndex(index - 1);\r\n            console.log('left');\r\n        }\r\n        console.log(index);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.slider + ' ' + props.className}>\r\n            <div className={classes.left} onClick={(e) => OnClick(e)}>\r\n                <i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            {AddImages()}\r\n            <div className={classes.right} onClick={(e) => OnClick(e)}>\r\n                <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider;","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Admin\\FormDBChange\\InsertDB\\Countries.jsx",["339","340"],"import React, {useState, useEffect} from 'react'\r\nimport Message from '../../../Common/DialogWindow/Message';\r\nimport { useForm } from \"react-hook-form\";\r\nimport InputText from '../../../CustomElements/InputText';\r\nimport TextArea from '../../../CustomElements/TextArea';\r\nimport Button from '../../../CustomElements/Button';\r\nimport classes from './Countries.module.css';\r\n\r\nconst Countries = (props) => {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [message, setMessage] = useState({style: {display: 'none'}, status: '', body: ''});\r\n    const [formData, setFormData] = useState({}); \r\n\r\n    const handleOnSubmit = (data)=>{\r\n        \r\n        setFormData(data);\r\n    }\r\n    useEffect(()=>{\r\n\r\n        async function insert()\r\n        {\r\n       \r\n            const json =  await fetch('http://localhost:4000/api/countries', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n            \r\n\r\n           \r\n            setMessage({style: {display: 'grid'}, status: json.status, body: json.statusText});\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        if (Object.keys(formData).length != 0)\r\n        {\r\n            insert()\r\n        }\r\n\r\n    }, [formData])\r\n\r\n    return (\r\n        <>\r\n            <Message setFunction={setMessage} style={message.style} status={message.status} body={message.body}/>\r\n            <form className={props.className + ' ' + classes.form} onSubmit={handleSubmit(handleOnSubmit)}>\r\n                <InputText register={register({required: true})} name='name' className={classes.inputText} \r\n                placeholder='Название страны'/>\r\n                \r\n                <TextArea register={register({required: true})} name='description' classTextArea={classes.textarea__text}\r\n                className={classes.textarea} title='Описание' placeholder='Введите описание'/>\r\n\r\n                <Button className={classes.button} classInput={classes.button__text} value='Добавить' />\r\n            </form>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Countries\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\SelectEntered.jsx",["341","342","343","344"],"import React, {useState} from 'react'\r\nimport classes from './SelectEntered.module.css';\r\n\r\nconst SelectEntered = (props) => {\r\n\r\n    const [value, setValue] = useState(props.value);\r\n    const [arrowClass, setArrowClass] = useState(classes.arrowDown);\r\n    const [possibleData, setPossibleData] = useState([]);\r\n\r\n    const onClickOption = (e) => {\r\n\r\n        setArrowClass(classes.arrowDown);\r\n        setPossibleData([]);\r\n        setValue(e.target.innerHTML);\r\n        if (props.onChangeFunction !== undefined)\r\n        {\r\n            props.onChangeFunction(e.target.innerHTML);\r\n        }\r\n    }\r\n    let data = []; \r\n    props.options.map((option) => {data.push(<label onClick={onClickOption} for={classes.id}>{option}</label>)});\r\n\r\n    const equalsArray = (array1, array2) =>{\r\n\r\n        let result = false;\r\n        if (array1.length != array2.length) return result;\r\n        \r\n        for(let i = 0; i < array1.length; i++){\r\n            \r\n            if (array1[i].props.children === array2[i].props.children)\r\n            {\r\n                result = true;\r\n            }\r\n            else{\r\n\r\n                result = false;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n    \r\n    const allOptions = () => {\r\n        \r\n        \r\n        if (!equalsArray(possibleData, data))\r\n        {\r\n            setArrowClass(classes.arrowTop);\r\n            setPossibleData(data);\r\n        }\r\n        else{\r\n\r\n            setArrowClass(classes.arrowDown);\r\n            setPossibleData([]);\r\n        }   \r\n        \r\n        \r\n    }\r\n    const enterText = (e) => {\r\n        \r\n        let text = e.target.value;\r\n\r\n        let possible = [];\r\n\r\n        data.map((city)=>{\r\n\r\n            const isFits = city.props.children.indexOf(text);\r\n            if (isFits >= 0) \r\n            {\r\n                possible.push(city);\r\n            }\r\n        })\r\n        if (text == '')\r\n        {\r\n            possible = [];\r\n        }\r\n       \r\n        setArrowClass(classes.arrowDown);\r\n        setPossibleData(possible);\r\n        setValue(text);\r\n       \r\n    }\r\n    return (\r\n        <div className={classes.wrap + ' ' + props.className}>\r\n            <div className={classes.selectInput}>\r\n                <input ref={props.register} name={props.name} placeholder={props.placeholder} id={classes.id}\r\n                className={classes.input + ' ' + props.classInput} onChange={enterText} value={value}/>\r\n                <div><div onClick={allOptions} className={arrowClass}></div></div>\r\n            </div>\r\n            <div className={classes.possibleData}>{possibleData.length ? possibleData: ''}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectEntered\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\ConvertService.jsx",["345"],"import React from 'react';\r\nimport classes from './ConvertService.module.css';\r\n\r\nconst ConvertService = (props) => {\r\n    let service;\r\n    switch(props.service)\r\n    {\r\n        case 'food':\r\n            service = 'cutlery';\r\n            break;\r\n        case 'bath':\r\n            service = 'bath';\r\n            break;\r\n        default:\r\n            console.log(service + ' service don`t support');\r\n            break;\r\n    }\r\n\r\n    return (<i class={\"fa fa-\" + service} \r\n               aria-hidden=\"true\" \r\n               style={props.style}></i>)\r\n}\r\n\r\nexport default ConvertService;","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Footer\\Footer.jsx",["346","347","348","349","350","351","352","353","354","355"],"import React from 'react'\r\nimport classes from './Footer.module.css';\r\nimport { Link } from 'react-router-dom'\r\nimport PresentationMap from '../Map/PresentationMap'\r\n\r\nconst homeOnMap= [{coordinates: [59.87026708231266, 30.26207174039379], hintContent: 'Эллинлайн', balloonContentBody: 'ул. Зайцева, 3, корп. 2, Санкт-Петербург'}];\r\nconst cityCoordinates = [59.9073, 30.3276];\r\nconst Footer = () => {\r\n\r\n        return (\r\n        <div className={ classes.footer }>\r\n            <PresentationMap className={ classes.footer__map } id=\"map\" cityCoordinates={cityCoordinates} points={homeOnMap}/>\r\n            \r\n            <div className={classes.footer__links}>\r\n                <div className={classes.links}>\r\n                    <a href='https://vk.com/ellinline' className={classes.header__button}><img src='images/vk.svg'/></a>\r\n                    <a href='https://www.facebook.com/ООО-Эллинлайн-112305267240823/' className={classes.header__button}><img src='images/facebook.svg'/></a>\r\n                    <a href='https://www.instagram.com/ellinlinespb/' className={classes.header__button}><img src='images/instagram.svg'/></a>\r\n                    <a href='/home' className={classes.header__button}><img src='images/youtube.svg'/></a>\r\n                </div>\r\n            </div>\r\n            <div className={classes.footer__info}>\r\n                <div className={classes.info__block}>\r\n                    <img src='images/home.svg' />\r\n                    <p>OOO «Эллинлайн», 198096, Санкт-Петербург, ул.Зайцева д.3</p>\r\n                </div>\r\n                <div className={classes.info__block}>\r\n                    <img src='images/phone.svg'/>\r\n                    <p> +7 (921) 973 33 44   <br/>\r\n                        +7 (812) 733 51 70 <br/>\r\n                        +7 (812) 784 04 71 <br/>\r\n\r\n                    </p>\r\n                </div>\r\n                <div className={classes.info__block}>\r\n                    <img src='images/mail.svg'/>\r\n                    <p>7840054@mail.ru</p>\r\n                </div>\r\n                <div className={classes.info__block}>\r\n                    <img src='images/clock.svg'/>\r\n                    <p>Понедельник — пятница: <br/> с 10:30 до 19:00</p>\r\n                </div>\r\n                <div className={classes.info__block}>\r\n                    <img src='images/bank.svg'/>\r\n                    <p>ПАО Банк «Санкт-Петербург», <br/> доп.офис «Нарвский», <br/> БИК 044030790, Р/с: 40702810145000000839</p>\r\n                </div>\r\n                <div className={classes.info__block}>\r\n                    <img src='images/anonymous.svg'/>\r\n                    <Link to='/privacy_policy'>Политика конфиденциальности</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Home\\Reviews.jsx",["356","357"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\Search\\Search.jsx",[],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\TextArea.jsx",[],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\SelectOption.jsx",["358","359","360"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Tours\\Tours.jsx",[],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\InfoSection.jsx",["361","362","363","364","365","366"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Tours\\Tour.jsx",["367","368","369","370","371","372","373"],"import React, { useState } from 'react';\r\nimport InfoSection from './../CustomElements/InfoSection.jsx';\r\nimport FormBooking from './../CustomElements/FormBooking.jsx';\r\nimport GeneralInfo from './GeneralInfo.jsx';\r\nimport classes from './Tour.module.css';\r\n\r\nconst Tour = (props) => {\r\n    const [images, setImages] = useState(props.images);\r\n    const [title, setTitle] = useState(props.title);\r\n    const [price, setPrice] = useState(props.price);\r\n    const [text, setText] = useState(props.text);\r\n    const [duration, setDuration] = useState(props.duration ? props.duration : 'Не известно');\r\n    const [index, setIndex] = useState(props.index ? props.index : 0)\r\n\r\n    return (\r\n        <div className={classes.tour}>\r\n            <InfoSection images={images} \r\n                         title={title} \r\n                         price={price}\r\n                         text={text}\r\n                         duration={duration}/>\r\n            <GeneralInfo timetable={\r\n        [\r\n            //1 day\r\n            [\r\n                [ '06:00 - 7:00', 'Едет в аиропоЕдет в аиропортЕдет в аиропортЕдет в аиропортЕдет в аиропортЕдет в аиропортЕдет в аиропортЕдет в аиропортЕдет в аиропортЕдет в аиропортЕдет в аиропортЕдет в аиропортЕдет в аиропортЕдет в аиропортрт' ],\r\n                [ '12:00 - 17:00', 'Забирите руну' ]\r\n            ],\r\n            //2 day\r\n            [\r\n                [ '06:00 - 7:00', 'Едет в аиропорт' ],\r\n                [ '12:00 - 17:00', 'Забирите руну' ]\r\n            ]\r\n        ]}\r\n        paid_services={['Проживание', 'Питание', 'Транс']}\r\n        additional={['Входные билеты', 'Общественный транспорт', 'Авиа перелет']}\r\n        />\r\n            <FormBooking/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tour;","C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Tours\\GeneralInfo.jsx",["374","375","376","377","378","379","380","381","382","383","384","385","386"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\Common\\UpToHeader\\UpToHeader.jsx",["387"],"C:\\Users\\zimin\\Desktop\\college\\Homework\\Сайты\\React_Apps\\Ellinline\\client\\src\\components\\CustomElements\\InputDate.jsx",["388","389","390"],{"ruleId":"391","severity":1,"message":"392","line":53,"column":42,"nodeType":"393","endLine":53,"endColumn":77},{"ruleId":"391","severity":1,"message":"392","line":60,"column":64,"nodeType":"393","endLine":60,"endColumn":101},{"ruleId":"391","severity":1,"message":"392","line":64,"column":99,"nodeType":"393","endLine":64,"endColumn":125},{"ruleId":"391","severity":1,"message":"392","line":65,"column":130,"nodeType":"393","endLine":65,"endColumn":162},{"ruleId":"391","severity":1,"message":"392","line":66,"column":114,"nodeType":"393","endLine":66,"endColumn":147},{"ruleId":"391","severity":1,"message":"392","line":67,"column":80,"nodeType":"393","endLine":67,"endColumn":111},{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","severity":1,"message":"399","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":23},{"ruleId":"398","severity":1,"message":"402","line":13,"column":18,"nodeType":"400","messageId":"401","endLine":13,"endColumn":26},{"ruleId":"403","severity":1,"message":"404","line":73,"column":34,"nodeType":"405","messageId":"406","endLine":73,"endColumn":36},{"ruleId":"398","severity":1,"message":"407","line":2,"column":22,"nodeType":"400","messageId":"401","endLine":2,"endColumn":31},{"ruleId":"403","severity":1,"message":"408","line":8,"column":42,"nodeType":"405","messageId":"406","endLine":8,"endColumn":44},{"ruleId":"394","replacedBy":"409"},{"ruleId":"396","replacedBy":"410"},{"ruleId":"398","severity":1,"message":"411","line":11,"column":36,"nodeType":"400","messageId":"401","endLine":11,"endColumn":42},{"ruleId":"403","severity":1,"message":"404","line":20,"column":36,"nodeType":"405","messageId":"406","endLine":20,"endColumn":38},{"ruleId":"412","severity":1,"message":"413","line":22,"column":29,"nodeType":"414","messageId":"415","endLine":22,"endColumn":31},{"ruleId":"403","severity":1,"message":"404","line":79,"column":42,"nodeType":"405","messageId":"406","endLine":79,"endColumn":44},{"ruleId":"394","replacedBy":"416"},{"ruleId":"396","replacedBy":"417"},{"ruleId":"398","severity":1,"message":"411","line":11,"column":36,"nodeType":"400","messageId":"401","endLine":11,"endColumn":42},{"ruleId":"403","severity":1,"message":"404","line":18,"column":36,"nodeType":"405","messageId":"406","endLine":18,"endColumn":38},{"ruleId":"412","severity":1,"message":"413","line":20,"column":28,"nodeType":"414","messageId":"415","endLine":20,"endColumn":30},{"ruleId":"403","severity":1,"message":"404","line":72,"column":42,"nodeType":"405","messageId":"406","endLine":72,"endColumn":44},{"ruleId":"394","replacedBy":"418"},{"ruleId":"396","replacedBy":"419"},{"ruleId":"398","severity":1,"message":"420","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":17},{"ruleId":"398","severity":1,"message":"411","line":11,"column":36,"nodeType":"400","messageId":"401","endLine":11,"endColumn":42},{"ruleId":"403","severity":1,"message":"404","line":18,"column":36,"nodeType":"405","messageId":"406","endLine":18,"endColumn":38},{"ruleId":"412","severity":1,"message":"413","line":20,"column":25,"nodeType":"414","messageId":"415","endLine":20,"endColumn":27},{"ruleId":"403","severity":1,"message":"404","line":72,"column":42,"nodeType":"405","messageId":"406","endLine":72,"endColumn":44},{"ruleId":"391","severity":1,"message":"392","line":39,"column":25,"nodeType":"393","endLine":39,"endColumn":53},{"ruleId":"391","severity":1,"message":"392","line":40,"column":25,"nodeType":"393","endLine":40,"endColumn":51},{"ruleId":"391","severity":1,"message":"392","line":41,"column":25,"nodeType":"393","endLine":41,"endColumn":58},{"ruleId":"391","severity":1,"message":"392","line":42,"column":25,"nodeType":"393","endLine":42,"endColumn":56},{"ruleId":"391","severity":1,"message":"392","line":43,"column":25,"nodeType":"393","endLine":43,"endColumn":51},{"ruleId":"391","severity":1,"message":"392","line":44,"column":25,"nodeType":"393","endLine":44,"endColumn":59},{"ruleId":"391","severity":1,"message":"392","line":45,"column":25,"nodeType":"393","endLine":45,"endColumn":85},{"ruleId":"391","severity":1,"message":"392","line":46,"column":25,"nodeType":"393","endLine":46,"endColumn":108},{"ruleId":"391","severity":1,"message":"392","line":52,"column":21,"nodeType":"393","endLine":52,"endColumn":49},{"ruleId":"391","severity":1,"message":"392","line":53,"column":21,"nodeType":"393","endLine":53,"endColumn":47},{"ruleId":"391","severity":1,"message":"392","line":54,"column":21,"nodeType":"393","endLine":54,"endColumn":54},{"ruleId":"391","severity":1,"message":"392","line":55,"column":21,"nodeType":"393","endLine":55,"endColumn":52},{"ruleId":"391","severity":1,"message":"392","line":56,"column":21,"nodeType":"393","endLine":56,"endColumn":47},{"ruleId":"391","severity":1,"message":"392","line":57,"column":21,"nodeType":"393","endLine":57,"endColumn":55},{"ruleId":"391","severity":1,"message":"392","line":58,"column":21,"nodeType":"393","endLine":58,"endColumn":48},{"ruleId":"391","severity":1,"message":"392","line":59,"column":21,"nodeType":"393","endLine":59,"endColumn":60},{"ruleId":"398","severity":1,"message":"421","line":18,"column":13,"nodeType":"400","messageId":"401","endLine":18,"endColumn":18},{"ruleId":"398","severity":1,"message":"422","line":19,"column":17,"nodeType":"400","messageId":"401","endLine":19,"endColumn":26},{"ruleId":"398","severity":1,"message":"423","line":20,"column":16,"nodeType":"400","messageId":"401","endLine":20,"endColumn":24},{"ruleId":"398","severity":1,"message":"424","line":21,"column":16,"nodeType":"400","messageId":"401","endLine":21,"endColumn":24},{"ruleId":"398","severity":1,"message":"425","line":22,"column":19,"nodeType":"400","messageId":"401","endLine":22,"endColumn":30},{"ruleId":"398","severity":1,"message":"426","line":23,"column":15,"nodeType":"400","messageId":"401","endLine":23,"endColumn":22},{"ruleId":"398","severity":1,"message":"427","line":24,"column":18,"nodeType":"400","messageId":"401","endLine":24,"endColumn":28},{"ruleId":"398","severity":1,"message":"428","line":72,"column":9,"nodeType":"400","messageId":"401","endLine":72,"endColumn":14},{"ruleId":"398","severity":1,"message":"429","line":73,"column":9,"nodeType":"400","messageId":"401","endLine":73,"endColumn":14},{"ruleId":"398","severity":1,"message":"430","line":81,"column":9,"nodeType":"400","messageId":"401","endLine":81,"endColumn":13},{"ruleId":"398","severity":1,"message":"431","line":2,"column":8,"nodeType":"400","messageId":"401","endLine":2,"endColumn":15},{"ruleId":"432","severity":1,"message":"433","line":19,"column":1,"nodeType":"434","messageId":"435","endLine":20,"endColumn":11},{"ruleId":"398","severity":1,"message":"407","line":1,"column":22,"nodeType":"400","messageId":"401","endLine":1,"endColumn":31},{"ruleId":"398","severity":1,"message":"436","line":1,"column":33,"nodeType":"400","messageId":"401","endLine":1,"endColumn":42},{"ruleId":"398","severity":1,"message":"437","line":1,"column":44,"nodeType":"400","messageId":"401","endLine":1,"endColumn":53},{"ruleId":"403","severity":1,"message":"408","line":75,"column":42,"nodeType":"405","messageId":"406","endLine":75,"endColumn":44},{"ruleId":"398","severity":1,"message":"438","line":87,"column":11,"nodeType":"400","messageId":"401","endLine":87,"endColumn":20},{"ruleId":"439","severity":1,"message":"440","line":8,"column":5,"nodeType":"441","messageId":"442","endLine":20,"endColumn":6},{"ruleId":"398","severity":1,"message":"443","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"444","line":8,"column":26,"nodeType":"400","messageId":"401","endLine":8,"endColumn":40},{"ruleId":"398","severity":1,"message":"445","line":9,"column":24,"nodeType":"400","messageId":"401","endLine":9,"endColumn":36},{"ruleId":"439","severity":1,"message":"440","line":16,"column":5,"nodeType":"441","messageId":"442","endLine":32,"endColumn":6},{"ruleId":"403","severity":1,"message":"404","line":38,"column":23,"nodeType":"405","messageId":"406","endLine":38,"endColumn":25},{"ruleId":"403","severity":1,"message":"404","line":38,"column":61,"nodeType":"405","messageId":"406","endLine":38,"endColumn":63},{"ruleId":"439","severity":1,"message":"440","line":49,"column":9,"nodeType":"441","messageId":"442","endLine":63,"endColumn":10},{"ruleId":"439","severity":1,"message":"440","line":68,"column":9,"nodeType":"441","messageId":"442","endLine":82,"endColumn":10},{"ruleId":"403","severity":1,"message":"408","line":147,"column":20,"nodeType":"405","messageId":"406","endLine":147,"endColumn":22},{"ruleId":"398","severity":1,"message":"443","line":1,"column":16,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"431","line":2,"column":8,"nodeType":"400","messageId":"401","endLine":2,"endColumn":15},{"ruleId":"398","severity":1,"message":"446","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":16},{"ruleId":"398","severity":1,"message":"411","line":11,"column":36,"nodeType":"400","messageId":"401","endLine":11,"endColumn":42},{"ruleId":"398","severity":1,"message":"447","line":15,"column":12,"nodeType":"400","messageId":"401","endLine":15,"endColumn":25},{"ruleId":"398","severity":1,"message":"448","line":15,"column":27,"nodeType":"400","messageId":"401","endLine":15,"endColumn":43},{"ruleId":"403","severity":1,"message":"404","line":19,"column":36,"nodeType":"405","messageId":"406","endLine":19,"endColumn":38},{"ruleId":"412","severity":1,"message":"413","line":21,"column":29,"nodeType":"414","messageId":"415","endLine":21,"endColumn":31},{"ruleId":"403","severity":1,"message":"404","line":77,"column":42,"nodeType":"405","messageId":"406","endLine":77,"endColumn":44},{"ruleId":"398","severity":1,"message":"411","line":16,"column":36,"nodeType":"400","messageId":"401","endLine":16,"endColumn":42},{"ruleId":"403","severity":1,"message":"404","line":28,"column":36,"nodeType":"405","messageId":"406","endLine":28,"endColumn":38},{"ruleId":"412","severity":1,"message":"413","line":31,"column":35,"nodeType":"414","messageId":"415","endLine":31,"endColumn":37},{"ruleId":"412","severity":1,"message":"413","line":35,"column":32,"nodeType":"414","messageId":"415","endLine":35,"endColumn":34},{"ruleId":"403","severity":1,"message":"404","line":92,"column":42,"nodeType":"405","messageId":"406","endLine":92,"endColumn":44},{"ruleId":"398","severity":1,"message":"449","line":2,"column":10,"nodeType":"400","messageId":"401","endLine":2,"endColumn":17},{"ruleId":"398","severity":1,"message":"450","line":3,"column":8,"nodeType":"400","messageId":"401","endLine":3,"endColumn":12},{"ruleId":"398","severity":1,"message":"451","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":26},{"ruleId":"398","severity":1,"message":"452","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":10},{"ruleId":"398","severity":1,"message":"453","line":14,"column":25,"nodeType":"400","messageId":"401","endLine":14,"endColumn":39},{"ruleId":"398","severity":1,"message":"454","line":15,"column":12,"nodeType":"400","messageId":"401","endLine":15,"endColumn":21},{"ruleId":"398","severity":1,"message":"455","line":15,"column":23,"nodeType":"400","messageId":"401","endLine":15,"endColumn":35},{"ruleId":"412","severity":1,"message":"413","line":59,"column":34,"nodeType":"414","messageId":"415","endLine":59,"endColumn":36},{"ruleId":"398","severity":1,"message":"456","line":65,"column":11,"nodeType":"400","messageId":"401","endLine":65,"endColumn":26},{"ruleId":"391","severity":1,"message":"392","line":10,"column":17,"nodeType":"393","endLine":10,"endColumn":52},{"ruleId":"394","replacedBy":"457"},{"ruleId":"396","replacedBy":"458"},{"ruleId":"398","severity":1,"message":"431","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":15},{"ruleId":"403","severity":1,"message":"408","line":6,"column":27,"nodeType":"405","messageId":"406","endLine":6,"endColumn":29},{"ruleId":"412","severity":1,"message":"413","line":9,"column":30,"nodeType":"414","messageId":"415","endLine":9,"endColumn":32},{"ruleId":"391","severity":1,"message":"392","line":16,"column":17,"nodeType":"393","endLine":16,"endColumn":49},{"ruleId":"398","severity":1,"message":"420","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":17},{"ruleId":"398","severity":1,"message":"411","line":11,"column":36,"nodeType":"400","messageId":"401","endLine":11,"endColumn":42},{"ruleId":"403","severity":1,"message":"404","line":18,"column":36,"nodeType":"405","messageId":"406","endLine":18,"endColumn":38},{"ruleId":"412","severity":1,"message":"413","line":21,"column":35,"nodeType":"414","messageId":"415","endLine":21,"endColumn":37},{"ruleId":"412","severity":1,"message":"413","line":25,"column":32,"nodeType":"414","messageId":"415","endLine":25,"endColumn":34},{"ruleId":"403","severity":1,"message":"404","line":86,"column":42,"nodeType":"405","messageId":"406","endLine":86,"endColumn":44},{"ruleId":"391","severity":1,"message":"392","line":9,"column":69,"nodeType":"393","endLine":9,"endColumn":104},{"ruleId":"391","severity":1,"message":"392","line":10,"column":70,"nodeType":"393","endLine":10,"endColumn":102},{"ruleId":"391","severity":1,"message":"392","line":11,"column":71,"nodeType":"393","endLine":11,"endColumn":100},{"ruleId":"391","severity":1,"message":"392","line":12,"column":76,"nodeType":"393","endLine":12,"endColumn":105},{"ruleId":"391","severity":1,"message":"392","line":13,"column":78,"nodeType":"393","endLine":13,"endColumn":115},{"ruleId":"403","severity":1,"message":"408","line":7,"column":20,"nodeType":"405","messageId":"406","endLine":7,"endColumn":22},{"ruleId":"403","severity":1,"message":"408","line":21,"column":26,"nodeType":"405","messageId":"406","endLine":21,"endColumn":28},{"ruleId":"403","severity":1,"message":"408","line":42,"column":41,"nodeType":"405","messageId":"406","endLine":42,"endColumn":43},{"ruleId":"403","severity":1,"message":"408","line":7,"column":27,"nodeType":"405","messageId":"406","endLine":7,"endColumn":29},{"ruleId":"412","severity":1,"message":"413","line":13,"column":30,"nodeType":"414","messageId":"415","endLine":13,"endColumn":32},{"ruleId":"412","severity":1,"message":"413","line":37,"column":30,"nodeType":"414","messageId":"415","endLine":37,"endColumn":32},{"ruleId":"398","severity":1,"message":"422","line":6,"column":19,"nodeType":"400","messageId":"401","endLine":6,"endColumn":28},{"ruleId":"403","severity":1,"message":"404","line":11,"column":36,"nodeType":"405","messageId":"406","endLine":11,"endColumn":38},{"ruleId":"391","severity":1,"message":"392","line":15,"column":31,"nodeType":"393","endLine":15,"endColumn":120},{"ruleId":"403","severity":1,"message":"408","line":15,"column":65,"nodeType":"405","messageId":"406","endLine":15,"endColumn":67},{"ruleId":"398","severity":1,"message":"411","line":11,"column":36,"nodeType":"400","messageId":"401","endLine":11,"endColumn":42},{"ruleId":"403","severity":1,"message":"404","line":40,"column":42,"nodeType":"405","messageId":"406","endLine":40,"endColumn":44},{"ruleId":"412","severity":1,"message":"413","line":21,"column":32,"nodeType":"414","messageId":"415","endLine":21,"endColumn":34},{"ruleId":"403","severity":1,"message":"404","line":26,"column":27,"nodeType":"405","messageId":"406","endLine":26,"endColumn":29},{"ruleId":"412","severity":1,"message":"413","line":65,"column":24,"nodeType":"414","messageId":"415","endLine":65,"endColumn":26},{"ruleId":"403","severity":1,"message":"408","line":73,"column":18,"nodeType":"405","messageId":"406","endLine":73,"endColumn":20},{"ruleId":"398","severity":1,"message":"431","line":2,"column":8,"nodeType":"400","messageId":"401","endLine":2,"endColumn":15},{"ruleId":"391","severity":1,"message":"392","line":16,"column":91,"nodeType":"393","endLine":16,"endColumn":117},{"ruleId":"391","severity":1,"message":"392","line":17,"column":122,"nodeType":"393","endLine":17,"endColumn":154},{"ruleId":"391","severity":1,"message":"392","line":18,"column":106,"nodeType":"393","endLine":18,"endColumn":139},{"ruleId":"391","severity":1,"message":"392","line":19,"column":72,"nodeType":"393","endLine":19,"endColumn":103},{"ruleId":"391","severity":1,"message":"392","line":24,"column":21,"nodeType":"393","endLine":24,"endColumn":50},{"ruleId":"391","severity":1,"message":"392","line":28,"column":21,"nodeType":"393","endLine":28,"endColumn":50},{"ruleId":"391","severity":1,"message":"392","line":36,"column":21,"nodeType":"393","endLine":36,"endColumn":49},{"ruleId":"391","severity":1,"message":"392","line":40,"column":21,"nodeType":"393","endLine":40,"endColumn":50},{"ruleId":"391","severity":1,"message":"392","line":44,"column":21,"nodeType":"393","endLine":44,"endColumn":49},{"ruleId":"391","severity":1,"message":"392","line":48,"column":21,"nodeType":"393","endLine":48,"endColumn":54},{"ruleId":"391","severity":1,"message":"392","line":13,"column":63,"nodeType":"393","endLine":13,"endColumn":104},{"ruleId":"391","severity":1,"message":"392","line":30,"column":69,"nodeType":"393","endLine":30,"endColumn":106},{"ruleId":"398","severity":1,"message":"459","line":5,"column":20,"nodeType":"400","messageId":"401","endLine":5,"endColumn":29},{"ruleId":"398","severity":1,"message":"460","line":6,"column":25,"nodeType":"400","messageId":"401","endLine":6,"endColumn":39},{"ruleId":"403","severity":1,"message":"404","line":30,"column":36,"nodeType":"405","messageId":"406","endLine":30,"endColumn":38},{"ruleId":"398","severity":1,"message":"423","line":6,"column":19,"nodeType":"400","messageId":"401","endLine":6,"endColumn":27},{"ruleId":"398","severity":1,"message":"424","line":7,"column":19,"nodeType":"400","messageId":"401","endLine":7,"endColumn":27},{"ruleId":"398","severity":1,"message":"426","line":8,"column":18,"nodeType":"400","messageId":"401","endLine":8,"endColumn":25},{"ruleId":"398","severity":1,"message":"422","line":9,"column":20,"nodeType":"400","messageId":"401","endLine":9,"endColumn":29},{"ruleId":"398","severity":1,"message":"461","line":12,"column":19,"nodeType":"400","messageId":"401","endLine":12,"endColumn":27},{"ruleId":"398","severity":1,"message":"462","line":14,"column":22,"nodeType":"400","messageId":"401","endLine":14,"endColumn":33},{"ruleId":"398","severity":1,"message":"422","line":8,"column":20,"nodeType":"400","messageId":"401","endLine":8,"endColumn":29},{"ruleId":"398","severity":1,"message":"423","line":9,"column":19,"nodeType":"400","messageId":"401","endLine":9,"endColumn":27},{"ruleId":"398","severity":1,"message":"424","line":10,"column":19,"nodeType":"400","messageId":"401","endLine":10,"endColumn":27},{"ruleId":"398","severity":1,"message":"426","line":11,"column":18,"nodeType":"400","messageId":"401","endLine":11,"endColumn":25},{"ruleId":"398","severity":1,"message":"462","line":12,"column":22,"nodeType":"400","messageId":"401","endLine":12,"endColumn":33},{"ruleId":"398","severity":1,"message":"463","line":13,"column":12,"nodeType":"400","messageId":"401","endLine":13,"endColumn":17},{"ruleId":"398","severity":1,"message":"461","line":13,"column":19,"nodeType":"400","messageId":"401","endLine":13,"endColumn":27},{"ruleId":"398","severity":1,"message":"464","line":5,"column":12,"nodeType":"400","messageId":"401","endLine":5,"endColumn":19},{"ruleId":"398","severity":1,"message":"427","line":5,"column":21,"nodeType":"400","messageId":"401","endLine":5,"endColumn":31},{"ruleId":"398","severity":1,"message":"465","line":6,"column":12,"nodeType":"400","messageId":"401","endLine":6,"endColumn":21},{"ruleId":"398","severity":1,"message":"466","line":6,"column":23,"nodeType":"400","messageId":"401","endLine":6,"endColumn":35},{"ruleId":"398","severity":1,"message":"454","line":7,"column":12,"nodeType":"400","messageId":"401","endLine":7,"endColumn":21},{"ruleId":"398","severity":1,"message":"455","line":7,"column":23,"nodeType":"400","messageId":"401","endLine":7,"endColumn":35},{"ruleId":"398","severity":1,"message":"467","line":8,"column":12,"nodeType":"400","messageId":"401","endLine":8,"endColumn":17},{"ruleId":"398","severity":1,"message":"468","line":8,"column":19,"nodeType":"400","messageId":"401","endLine":8,"endColumn":27},{"ruleId":"398","severity":1,"message":"469","line":9,"column":26,"nodeType":"400","messageId":"401","endLine":9,"endColumn":42},{"ruleId":"398","severity":1,"message":"470","line":10,"column":24,"nodeType":"400","messageId":"401","endLine":10,"endColumn":37},{"ruleId":"398","severity":1,"message":"471","line":11,"column":23,"nodeType":"400","messageId":"401","endLine":11,"endColumn":35},{"ruleId":"403","severity":1,"message":"404","line":15,"column":36,"nodeType":"405","messageId":"406","endLine":15,"endColumn":38},{"ruleId":"403","severity":1,"message":"404","line":27,"column":42,"nodeType":"405","messageId":"406","endLine":27,"endColumn":44},{"ruleId":"391","severity":1,"message":"392","line":24,"column":13,"nodeType":"393","endLine":24,"endColumn":57},{"ruleId":"398","severity":1,"message":"472","line":5,"column":18,"nodeType":"400","messageId":"401","endLine":5,"endColumn":25},{"ruleId":"398","severity":1,"message":"473","line":20,"column":17,"nodeType":"400","messageId":"401","endLine":20,"endColumn":23},{"ruleId":"398","severity":1,"message":"474","line":21,"column":17,"nodeType":"400","messageId":"401","endLine":21,"endColumn":23},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["475"],"no-negated-in-lhs",["476"],"no-unused-vars","'PresentationMap' is defined but never used.","Identifier","unusedVar","'setItems' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Placemark' is defined but never used.","Expected '===' and instead saw '=='.",["475"],["476"],"'errors' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["475"],["476"],["475"],["476"],"'InputText' is defined but never used.","'setId' is assigned a value but never used.","'setImages' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setServices' is assigned a value but never used.","'setText' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'title' is assigned a value but never used.","'price' is assigned a value but never used.","'text' is assigned a value but never used.","'classes' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Clusterer' is defined but never used.","'GeoObject' is defined but never used.","'markState' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useEffect' is defined but never used.","'setDateArrival' is assigned a value but never used.","'setDateLeave' is assigned a value but never used.","'TextArea' is defined but never used.","'textAreaValue' is assigned a value but never used.","'setTextAreaValue' is assigned a value but never used.","'NavLink' is defined but never used.","'List' is defined but never used.","'CountryDescription' is defined but never used.","'ky' is defined but never used.","'setSanatoriums' is assigned a value but never used.","'countries' is assigned a value but never used.","'setCountries' is assigned a value but never used.","'cityCoordinates' is assigned a value but never used.",["475"],["476"],"'setValues' is assigned a value but never used.","'setPlaceholder' is assigned a value but never used.","'setIndex' is assigned a value but never used.","'setDuration' is assigned a value but never used.","'index' is assigned a value but never used.","'address' is assigned a value but never used.","'languages' is assigned a value but never used.","'setLanguages' is assigned a value but never used.","'route' is assigned a value but never used.","'setRoute' is assigned a value but never used.","'setPaid_Services' is assigned a value but never used.","'setAdditional' is assigned a value but never used.","'setTimetable' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setMin' is assigned a value but never used.","'setMax' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]