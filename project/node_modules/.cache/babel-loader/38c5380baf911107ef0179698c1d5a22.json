{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zimin\\\\Desktop\\\\college\\\\Homework\\\\\\u0421\\u0430\\u0439\\u0442\\u044B\\\\React_Apps\\\\Ellinline\\\\client\\\\src\\\\components\\\\Relax\\\\Relax.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport List from './List.jsx';\nimport CountryDescription from '../Common/countryDescription/countryDescription';\nimport classes from './Relax.module.css';\nimport ChooseResort from './ChooseResort.jsx';\nimport Resort from './Resort.jsx';\nimport ky from 'ky';\n\nconst Relax = () => {\n  _s();\n\n  const [sanatoriums, setSanatoriums] = useState([]);\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    document.title = `Отдых`;\n\n    async function getData() {\n      const json = await ky.get('http://localhost:4000/getSanatoriums').json();\n      setSanatoriums(json);\n      let bufCountries = [];\n      sanatoriums.map(sanatorium => {\n        bufCountries.push({\n          nameCountry: sanatorium.nameCountry,\n          descriptionCountry: sanatorium.descriptionCountry\n        });\n        delete sanatorium.nameCountry;\n        delete sanatorium.descriptionCountry;\n      });\n      setCountries(bufCountries);\n    }\n\n    getData();\n  }, []);\n  console.log(sanatoriums);\n  let points = [];\n  sanatoriums.map(sanatorium => {\n    points.push({\n      coordinates: [sanatorium.coordinates.x, sanatorium.coordinates.y],\n      hintContent: sanatorium.title,\n      balloonContentBody: sanatorium.address\n    });\n  });\n  const cityCoordinates = [58.52192654163379, 31.282977010801268];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.relax,\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/relax\",\n      component: ChooseResort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/relax/:category\",\n      component: ChooseResort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/relax/:category/:id\",\n      component: Resort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Relax, \"UdV5wtQHUf1aWp0hw8aZYL1iJ5g=\");\n\n_c = Relax;\nexport default Relax;\n\nvar _c;\n\n$RefreshReg$(_c, \"Relax\");","map":{"version":3,"sources":["C:/Users/zimin/Desktop/college/Homework/Сайты/React_Apps/Ellinline/client/src/components/Relax/Relax.jsx"],"names":["React","useEffect","useState","NavLink","Route","List","CountryDescription","classes","ChooseResort","Resort","ky","Relax","sanatoriums","setSanatoriums","countries","setCountries","document","title","getData","json","get","bufCountries","map","sanatorium","push","nameCountry","descriptionCountry","console","log","points","coordinates","x","y","hintContent","balloonContentBody","address","cityCoordinates","relax"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,kBAA/B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,kBAAP,MAA+B,iDAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,EAAP,MAAe,IAAf;;AAKA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAEVe,IAAAA,QAAQ,CAACC,KAAT,GAAkB,OAAlB;;AAEA,mBAAeC,OAAf,GAAwB;AAEpB,YAAMC,IAAI,GAAI,MAAMT,EAAE,CAACU,GAAH,CAAO,sCAAP,EAA+CD,IAA/C,EAApB;AACAN,MAAAA,cAAc,CAACM,IAAD,CAAd;AACA,UAAIE,YAAY,GAAG,EAAnB;AACAT,MAAAA,WAAW,CAACU,GAAZ,CAAiBC,UAAD,IAAgB;AAE5BF,QAAAA,YAAY,CAACG,IAAb,CAAkB;AAACC,UAAAA,WAAW,EAAEF,UAAU,CAACE,WAAzB;AAAsCC,UAAAA,kBAAkB,EAAEH,UAAU,CAACG;AAArE,SAAlB;AACA,eAAOH,UAAU,CAACE,WAAlB;AACA,eAAOF,UAAU,CAACG,kBAAlB;AACH,OALD;AAMAX,MAAAA,YAAY,CAACM,YAAD,CAAZ;AACH;;AAEDH,IAAAA,OAAO;AAEV,GApBQ,EAoBN,EApBM,CAAT;AAqBAS,EAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AAGA,MAAIiB,MAAM,GAAG,EAAb;AACAjB,EAAAA,WAAW,CAACU,GAAZ,CAAiBC,UAAD,IAChB;AACIM,IAAAA,MAAM,CAACL,IAAP,CAAY;AACRM,MAAAA,WAAW,EAAE,CAACP,UAAU,CAACO,WAAX,CAAuBC,CAAxB,EAA2BR,UAAU,CAACO,WAAX,CAAuBE,CAAlD,CADL;AAERC,MAAAA,WAAW,EAAEV,UAAU,CAACN,KAFhB;AAEuBiB,MAAAA,kBAAkB,EAAEX,UAAU,CAACY;AAFtD,KAAZ;AAGH,GALD;AAMA,QAAMC,eAAe,GAAG,CAAC,iBAAD,EAAmB,kBAAnB,CAAxB;AAGA,sBACI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA,4BAEI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAE7B;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,kBAAlB;AAAqC,MAAA,SAAS,EAAEA;AAAhD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,sBAAlB;AAAyC,MAAA,SAAS,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAtDD;;GAAME,K;;KAAAA,K;AAwDN,eAAeA,KAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport List from './List.jsx'; \r\nimport CountryDescription from '../Common/countryDescription/countryDescription';\r\nimport classes from './Relax.module.css';\r\nimport ChooseResort from './ChooseResort.jsx';\r\nimport Resort from './Resort.jsx';\r\nimport ky from 'ky';\r\n\r\n\r\n\r\n    \r\nconst Relax = () => {\r\n    const [sanatoriums, setSanatoriums] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        document.title = `Отдых`;\r\n\r\n        async function getData(){\r\n    \r\n            const json =  await ky.get('http://localhost:4000/getSanatoriums').json();\r\n            setSanatoriums(json);\r\n            let bufCountries = [];\r\n            sanatoriums.map((sanatorium) => { \r\n\r\n                bufCountries.push({nameCountry: sanatorium.nameCountry, descriptionCountry: sanatorium.descriptionCountry});\r\n                delete sanatorium.nameCountry;\r\n                delete sanatorium.descriptionCountry;\r\n            })\r\n            setCountries(bufCountries);\r\n        }\r\n\r\n        getData()\r\n\r\n    }, []);\r\n    console.log(sanatoriums)\r\n    \r\n    \r\n    let points = [];\r\n    sanatoriums.map((sanatorium) => \r\n    { \r\n        points.push({\r\n            coordinates: [sanatorium.coordinates.x, sanatorium.coordinates.y],\r\n            hintContent: sanatorium.title, balloonContentBody: sanatorium.address});\r\n    });\r\n    const cityCoordinates = [58.52192654163379,31.282977010801268];\r\n    \r\n    \r\n    return (\r\n        <div className={classes.relax}>\r\n            {/* THIS MAYBE STUPID SHIT */}\r\n            <Route exact path='/relax' component={ChooseResort}></Route>\r\n            <Route exact path='/relax/:category' component={ChooseResort}></Route>\r\n            {/* PLEASE FIX THIS, IF THAT`S NOT HOW IT`S DONE, ALSO THERE ANOTHER <Route/> in <ChooseResort/>*/}\r\n\r\n            <Route exact path='/relax/:category/:id' component={Resort}></Route>\r\n            {/* <Route path='/relax/:category' component={ChooseResort}></Route> */}\r\n\r\n            \r\n            {/* <CountryDescription countries={countries} />\r\n            <List sanatoriums={sanatoriums} points={points} cityCoordinates={cityCoordinates} /> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Relax\r\n"]},"metadata":{},"sourceType":"module"}