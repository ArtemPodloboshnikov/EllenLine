{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zimin\\\\Desktop\\\\college\\\\Homework\\\\\\u0421\\u0430\\u0439\\u0442\\u044B\\\\React_Apps\\\\Ellinline\\\\client\\\\src\\\\components\\\\CustomElements\\\\InputNumber.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './InputNumber.module.css';\n\nconst InputNumber = props => {\n  _s();\n\n  const [value, setValue] = useState(props.value);\n\n  const isNumber = val => {\n    return !isNaN(val);\n  };\n\n  const plus = () => {\n    let new_value;\n    if (isNaN(value)) new_value = props.min;else new_value = Number.parseInt(value) + 1;\n    console.log(value);\n    if (props.max <= new_value) new_value = props.max;\n    if (props.min >= new_value) new_value = props.min;\n    setValue(new_value);\n  };\n\n  const minus = () => {\n    let new_value;\n    if (isNaN(value)) new_value = props.min;else new_value = Number.parseInt(value) - 1;\n    if (props.min >= new_value) new_value = props.min;\n    if (props.max <= new_value) new_value = props.max;\n    setValue(new_value);\n  };\n\n  const printValue = event => {\n    let enter_text = Number.parseInt(event.target.value);\n\n    if (isNaN(enter_text)) {\n      enter_text = undefined;\n      event.target.value = '';\n    }\n\n    console.log(event.target.value);\n    console.log(value);\n    if (enter_text >= props.max) enter_text = props.max;\n    if (enter_text <= props.min) enter_text = props.min;\n    setValue(enter_text); //FIXME value no changed in html\n  };\n\n  const componentDidMount = () => {//console.log(input.current.value)\n  }; // console.log(value);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.inputNumber + ' ' + props.className,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: classes.input,\n      placeholder: props.placeholder,\n      value: value,\n      onChange: printValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: plus,\n      className: classes.plus,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: minus,\n      className: classes.minus,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputNumber, \"avGViNLCMF52AfdzrjD0mw5oVXc=\");\n\n_c = InputNumber;\nexport default InputNumber;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputNumber\");","map":{"version":3,"sources":["C:/Users/zimin/Desktop/college/Homework/Сайты/React_Apps/Ellinline/client/src/components/CustomElements/InputNumber.jsx"],"names":["React","useState","classes","InputNumber","props","value","setValue","isNumber","val","isNaN","plus","new_value","min","Number","parseInt","console","log","max","minus","printValue","event","enter_text","target","undefined","componentDidMount","inputNumber","className","input","placeholder"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport classes from './InputNumber.module.css'\r\n\r\nconst InputNumber = (props) => {\r\n   \r\n    const [value, setValue] = useState(props.value);\r\n    const isNumber = (val) => {\r\n        return !isNaN(val);\r\n    }\r\n    const plus = ()=>{\r\n\r\n        let new_value;\r\n        if (isNaN(value)) new_value = props.min;\r\n        else new_value = Number.parseInt(value) + 1;\r\n        console.log(value)\r\n        if (props.max <= new_value)\r\n            new_value = props.max;\r\n        if (props.min >= new_value)\r\n            new_value = props.min;\r\n\r\n        setValue(new_value);\r\n    }\r\n    const minus = ()=>{\r\n\r\n        let new_value;\r\n        if (isNaN(value)) new_value = props.min;\r\n        else new_value = Number.parseInt(value) - 1;\r\n        if (props.min >= new_value)\r\n             new_value = props.min;\r\n        if (props.max <= new_value)\r\n            new_value = props.max;\r\n        setValue(new_value);\r\n    }\r\n    const printValue = (event)=>{\r\n        \r\n        let enter_text = Number.parseInt(event.target.value);\r\n        if (isNaN(enter_text)) \r\n        {\r\n            enter_text = undefined; \r\n            event.target.value = ''\r\n        }\r\n        console.log(event.target.value);\r\n        console.log(value);\r\n        if (enter_text >= props.max)\r\n            enter_text = props.max;\r\n        if (enter_text <= props.min)\r\n            enter_text = props.min;\r\n        setValue(enter_text);\r\n        //FIXME value no changed in html\r\n    }\r\n    const componentDidMount = ()=>{\r\n\r\n        //console.log(input.current.value)\r\n    }\r\n    // console.log(value);\r\n    return (\r\n        <div className={classes.inputNumber + ' ' + props.className}>\r\n            <input className={classes.input} placeholder={props.placeholder} value={value} onChange={printValue}/>\r\n            <div onClick={plus} className={classes.plus}>+</div>\r\n            <div onClick={minus} className={classes.minus}>-</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputNumber\r\n"]},"metadata":{},"sourceType":"module"}