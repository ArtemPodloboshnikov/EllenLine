{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zimin\\\\Desktop\\\\college\\\\Homework\\\\\\u0421\\u0430\\u0439\\u0442\\u044B\\\\React_Apps\\\\Ellinline\\\\client\\\\src\\\\components\\\\Common\\\\Map\\\\EditMap.jsx\",\n    _s = $RefreshSig$();\n\nimport { YMaps, Map, Placemark, Clusterer, GeoObject } from 'react-yandex-maps';\nimport React, { useState, useEffect } from 'react';\nimport classes from './YandexMap.module.css'; //const mapState = { center: [59.9073, 30.3276], zoom: 10 };\n//const markState = {points: [{geometry: [59.87026977960634, 30.26204491830366], hintContent: 'Эллинлайн', balloonContent: 'ул. Зайцева, 3, корп. 2, Санкт-Петербург'}]}\n\nfunction EditMap(props) {\n  _s();\n\n  const [cityCoordinates, setCityCoordinates] = useState([59.93388253587983, 30.321229494686143]);\n\n  const newPlacemark = event => {\n    let map = event.originalEvent.target;\n    console.log(map);\n    map.events.add('click', e => {\n      if (!map.balloon.isOpen()) {\n        let coords = e.get('coords');\n        map.balloon.open(coords, {\n          contentHeader: 'Событие!',\n          contentBody: '<p>Кто-то щелкнул по карте.</p>' + '<p>Координаты щелчка: ' + [coords[0].toPrecision(6), coords[1].toPrecision(6)].join(', ') + '</p>',\n          contentFooter: '<sup>Щелкните еще раз</sup>'\n        });\n      } else {\n        map.balloon.close();\n      }\n    });\n  };\n\n  useEffect(() => {\n    async function getGeocode(city) {\n      let coordinates = [];\n      await fetch(`https://geocode-maps.yandex.ru/1.x/?format=json&apikey=5594e597-90cb-48f6-a139-b76c8a42a41a&geocode=${city}`).then(result => result.json()).then(data => {\n        let coords = data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos.split(' ');\n        coordinates[0] = Number.parseFloat(coords[1]);\n        coordinates[1] = Number.parseFloat(coords[0]);\n      });\n      setCityCoordinates(coordinates);\n    }\n\n    getGeocode(props.cityName);\n  }, [props.cityName]); //console.log(props.cityName);\n\n  let mapState = {};\n\n  if (Object.keys(props.points).length == 1) {\n    mapState = {\n      center: props.points[0].coordinates,\n      zoom: 17\n    };\n  } else {\n    mapState = {\n      center: cityCoordinates,\n      zoom: 10\n    };\n  } // console.log(cityCoordinates);\n\n\n  const markState = {\n    points: props.points,\n    modules: ['geoObject.addon.balloon', 'geoObject.addon.hint']\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className + ' ' + classes.wrap,\n    id: props.id,\n    children: /*#__PURE__*/_jsxDEV(YMaps, {\n      enterprise: true,\n      query: {\n        apikey: '5594e597-90cb-48f6-a139-b76c8a42a41a&lang=ru_RU'\n      },\n      version: \"2.1\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        state: mapState,\n        onClick: newPlacemark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 15\n  }, this);\n}\n\n_s(EditMap, \"WSIqDQzMaOxwfptocrFMc5Uv2Iw=\");\n\n_c = EditMap;\n;\nexport default EditMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMap\");","map":{"version":3,"sources":["C:/Users/zimin/Desktop/college/Homework/Сайты/React_Apps/Ellinline/client/src/components/Common/Map/EditMap.jsx"],"names":["YMaps","Map","Placemark","Clusterer","GeoObject","React","useState","useEffect","classes","EditMap","props","cityCoordinates","setCityCoordinates","newPlacemark","event","map","originalEvent","target","console","log","events","add","e","balloon","isOpen","coords","get","open","contentHeader","contentBody","toPrecision","join","contentFooter","close","getGeocode","city","coordinates","fetch","then","result","json","data","response","GeoObjectCollection","featureMember","Point","pos","split","Number","parseFloat","cityName","mapState","Object","keys","points","length","center","zoom","markState","modules","className","wrap","id","apikey"],"mappings":"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","sourcesContent":["import { YMaps, Map, Placemark, Clusterer, GeoObject } from 'react-yandex-maps';\r\nimport React, {useState, useEffect} from 'react'\r\nimport classes from './YandexMap.module.css';\r\n\r\n//const mapState = { center: [59.9073, 30.3276], zoom: 10 };\r\n//const markState = {points: [{geometry: [59.87026977960634, 30.26204491830366], hintContent: 'Эллинлайн', balloonContent: 'ул. Зайцева, 3, корп. 2, Санкт-Петербург'}]}\r\n\r\n\r\nfunction EditMap(props){\r\n   \r\n   \r\n    const [cityCoordinates, setCityCoordinates] = useState([59.93388253587983, 30.321229494686143]);\r\n    \r\n   \r\n    const newPlacemark = (event) => {\r\n        \r\n        let map = event.originalEvent.target;\r\n        console.log(map);\r\n        map.events.add('click', (e) =>{\r\n\r\n            if (!map.balloon.isOpen()) {\r\n                let coords = e.get('coords');\r\n                map.balloon.open(coords, {\r\n                    contentHeader:'Событие!',\r\n                    contentBody:'<p>Кто-то щелкнул по карте.</p>' +\r\n                        '<p>Координаты щелчка: ' + [\r\n                        coords[0].toPrecision(6),\r\n                        coords[1].toPrecision(6)\r\n                        ].join(', ') + '</p>',\r\n                    contentFooter:'<sup>Щелкните еще раз</sup>'\r\n                });\r\n            \r\n            }\r\n            else {\r\n                map.balloon.close();\r\n            }\r\n            \r\n\r\n        })\r\n\r\n           \r\n            \r\n    \r\n    }\r\n    \r\n    useEffect(()=>{\r\n\r\n       \r\n        async function getGeocode(city)\r\n        {\r\n            let coordinates = [];\r\n            await fetch(`https://geocode-maps.yandex.ru/1.x/?format=json&apikey=5594e597-90cb-48f6-a139-b76c8a42a41a&geocode=${city}`)\r\n            .then(result => result.json())\r\n            .then(data => {\r\n\r\n                let coords =  data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos.split(' ');\r\n                coordinates[0] = Number.parseFloat(coords[1]);\r\n                coordinates[1] = Number.parseFloat(coords[0]);\r\n\r\n            });\r\n\r\n            setCityCoordinates(coordinates);\r\n           \r\n        }\r\n        \r\n        getGeocode(props.cityName);\r\n        \r\n\r\n    }, [props.cityName])\r\n\r\n    //console.log(props.cityName);\r\n\r\n    let mapState = {};\r\n\r\n    if (Object.keys(props.points).length == 1)\r\n    {\r\n        mapState = {center: props.points[0].coordinates, zoom: 17};\r\n    }\r\n    else\r\n    {\r\n        \r\n        mapState = {center: cityCoordinates, zoom: 10};\r\n    }\r\n  \r\n   // console.log(cityCoordinates);\r\n\r\n    const markState = {points: props.points,  modules: ['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n\r\n    return   (<div className={props.className + ' ' + classes.wrap} id={props.id}>\r\n            \r\n            <YMaps enterprise query={{apikey: '5594e597-90cb-48f6-a139-b76c8a42a41a&lang=ru_RU'}} \r\n               version={\"2.1\"}>\r\n       \r\n            <Map state={mapState} onClick={newPlacemark}>\r\n           \r\n            {/* <Clusterer options={{\r\n                            preset: 'islands#invertedVioletClusterIcons',\r\n                            clusterDisableClickZoom: true,\r\n                            clusterHideIconOnBalloonOpen: false,\r\n                            geoObjectHideIconOnBalloonOpen: false\r\n                        }}>\r\n                {markState.points.length ? markState.points.map((point) => (\r\n                    <GeoObject \r\n                        geometry={{type: \"Point\", coordinates: point.coordinates}} \r\n                        properties={{hintContent: point.hintContent, balloonContentBody: point.balloonContentBody}} \r\n                        modules={[...markState.modules]} \r\n                        options={{\r\n                            iconLayout: 'default#image',\r\n                            iconImageHref: 'images/marker.svg',\r\n                            iconImageSize: [60, 52],\r\n                            iconImageOffset: [-30, -56]\r\n                        }}\r\n                    ></GeoObject>)): ''}\r\n            </Clusterer> */}\r\n\r\n                {/* <Placemark geometry={[59.87026977960634, 30.26204491830366]}\r\n                properties={{\r\n                    hintContent: \"Эллинлайн\",\r\n                    balloonContent: 'ул. Зайцева, 3, корп. 2, Санкт-Петербург'\r\n                }}\r\n                modules={[\r\n                    'geoObject.addon.balloon', 'geoObject.addon.hint'\r\n                ]}\r\n\r\n                options={{\r\n                    iconImageHref:'images/logo-header.svg',\r\n                    iconImageSize: [30, 42],\r\n                    iconImageOffset: [-5, -38]\r\n                }}>\r\n\r\n\r\n                </Placemark> */}\r\n\r\n            </Map>\r\n          \r\n        </YMaps>\r\n        </div>)\r\n    \r\n};\r\n\r\nexport default EditMap;"]},"metadata":{},"sourceType":"module"}