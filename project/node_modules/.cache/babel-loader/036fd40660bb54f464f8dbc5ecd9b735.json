{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zimin\\\\Desktop\\\\college\\\\Homework\\\\\\u0421\\u0430\\u0439\\u0442\\u044B\\\\React_Apps\\\\Ellinline\\\\client\\\\src\\\\components\\\\Admin\\\\FormDBChange\\\\InsertDB\\\\Countries.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Message from '../../../Common/DialogWindow/Message';\nimport { useForm } from \"react-hook-form\";\nimport InputText from '../../../CustomElements/InputText';\nimport TextArea from '../../../CustomElements/TextArea';\nimport Button from '../../../CustomElements/Button';\nimport classes from './Countries.module.css';\n\nconst Countries = props => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [message, setMessage] = useState({\n    style: {\n      display: 'none'\n    },\n    status: '',\n    body: ''\n  });\n  const [formData, setFormData] = useState({});\n\n  const handleOnSubmit = data => {\n    setFormData(data);\n  };\n\n  useEffect(() => {\n    async function insert() {\n      const json = await fetch('http://localhost:4000/api/countries', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(formData)\n      });\n      setMessage({\n        style: {\n          display: 'grid'\n        },\n        status: json.status,\n        body: json.statusText\n      });\n    }\n\n    if (Object.keys(formData).length != 0) {\n      insert();\n    }\n  }, [formData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Message, {\n      setFunction: setMessage,\n      style: message.style,\n      status: message.status,\n      body: message.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: props.className + ' ' + classes.form,\n      onSubmit: handleSubmit(handleOnSubmit),\n      children: [/*#__PURE__*/_jsxDEV(InputText, {\n        register: register({\n          required: true\n        }),\n        name: \"name\",\n        className: classes.inputText,\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0441\\u0442\\u0440\\u0430\\u043D\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        register: register({\n          required: true\n        }),\n        name: \"description\",\n        classTextArea: classes.textarea__text,\n        className: classes.textarea,\n        title: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        classInput: classes.button__text,\n        value: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Countries, \"MI13ADPnOY2IoDCrgILzpvHZqU8=\", false, function () {\n  return [useForm];\n});\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["C:/Users/zimin/Desktop/college/Homework/Сайты/React_Apps/Ellinline/client/src/components/Admin/FormDBChange/InsertDB/Countries.jsx"],"names":["React","useState","useEffect","Message","useForm","InputText","TextArea","Button","classes","Countries","props","register","handleSubmit","errors","message","setMessage","style","display","status","body","formData","setFormData","handleOnSubmit","data","insert","json","fetch","method","headers","JSON","stringify","statusText","Object","keys","length","className","form","required","inputText","textarea__text","textarea","button","button__text"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Message from '../../../Common/DialogWindow/Message';\r\nimport { useForm } from \"react-hook-form\";\r\nimport InputText from '../../../CustomElements/InputText';\r\nimport TextArea from '../../../CustomElements/TextArea';\r\nimport Button from '../../../CustomElements/Button';\r\nimport classes from './Countries.module.css';\r\n\r\nconst Countries = (props) => {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [message, setMessage] = useState({style: {display: 'none'}, status: '', body: ''});\r\n    const [formData, setFormData] = useState({}); \r\n\r\n    const handleOnSubmit = (data)=>{\r\n        \r\n        setFormData(data);\r\n    }\r\n    useEffect(()=>{\r\n\r\n        async function insert()\r\n        {\r\n       \r\n            const json =  await fetch('http://localhost:4000/api/countries', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n            \r\n\r\n           \r\n            setMessage({style: {display: 'grid'}, status: json.status, body: json.statusText});\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n        if (Object.keys(formData).length != 0)\r\n        {\r\n            insert()\r\n        }\r\n\r\n    }, [formData])\r\n\r\n    return (\r\n        <>\r\n            <Message setFunction={setMessage} style={message.style} status={message.status} body={message.body}/>\r\n            <form className={props.className + ' ' + classes.form} onSubmit={handleSubmit(handleOnSubmit)}>\r\n                <InputText register={register({required: true})} name='name' className={classes.inputText} \r\n                placeholder='Название страны'/>\r\n                \r\n                <TextArea register={register({required: true})} name='description' classTextArea={classes.textarea__text}\r\n                className={classes.textarea} title='Описание' placeholder='Введите описание'/>\r\n\r\n                <Button className={classes.button} classInput={classes.button__text} value='Добавить' />\r\n            </form>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Countries\r\n"]},"metadata":{},"sourceType":"module"}